/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.paneles.directivo;

import vista.interfaces.IConstanteComponentes;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import vista.Principal;
import vista.paneles.PanelComponents;

/**
 *
 * @author Carlos
 */
@SuppressWarnings("serial")
public class PanelDepartamentos extends PanelComponents implements IConstanteComponentes{

    private final Principal principal;
    private Timer timerBuscar;
    /**
     * Creates new form PanelDepartamentos
     * @param principal
     */
    public PanelDepartamentos(Principal principal) {
        this.principal = principal;
        initComponents();
        eventuarComponentes();
        eventuarTabs(jTabbedPaneDepartamentos);
        cargarDirectivos();
        
        try {
            agregarFocusBorder(jPanelBuscar, jPanelRegistroDptos, jPanelVerDptos);
            modificarTemaComboBox(jPanelBuscar, jPanelRegistroDptos);
            cambiarEstiloTabbePane(jTabbedPaneDepartamentos);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(PanelDepartamentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        modificarTabla(jTableDepartamentos);
        cargarDatosPrincipales();
        iniciarTimerBuscar(jTableDepartamentos, jTextFieldBuscar, timerBuscar);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneDepartamentos = new javax.swing.JTabbedPane();
        jPanelVerDptos = new javax.swing.JPanel();
        jPanelBuscar = new javax.swing.JPanel();
        jLabelBuscar = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDepartamentos = new javax.swing.JTable();
        jPanelRegistroDptos = new javax.swing.JPanel();
        jTextFieldNombreDpto = new javax.swing.JTextField();
        jComboBoxEncargado = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneDescripcion = new javax.swing.JTextPane();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();

        setBackground(new java.awt.Color(88, 165, 240));

        jTabbedPaneDepartamentos.setBackground(new java.awt.Color(88, 165, 240));
        jTabbedPaneDepartamentos.setForeground(new java.awt.Color(255, 255, 255));

        jPanelVerDptos.setBackground(new java.awt.Color(255, 255, 255));

        jPanelBuscar.setBackground(new java.awt.Color(255, 255, 255));

        jLabelBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/busqueda/search.png"))); // NOI18N

        jTextFieldBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldBuscar.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldBuscar.setText("Buscar");
        jTextFieldBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelBuscarLayout = new javax.swing.GroupLayout(jPanelBuscar);
        jPanelBuscar.setLayout(jPanelBuscarLayout);
        jPanelBuscarLayout.setHorizontalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelBuscarLayout.setVerticalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldBuscar)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
        );

        jScrollPane2.setBorder(null);

        jTableDepartamentos.setAutoCreateRowSorter(true);
        jTableDepartamentos.setForeground(new java.awt.Color(110, 110, 110));
        jTableDepartamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Departamento", "Encargado", "Descripci√≥n"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDepartamentos.setGridColor(new java.awt.Color(204, 204, 204));
        jTableDepartamentos.setSelectionBackground(new java.awt.Color(88, 165, 240));
        jTableDepartamentos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jTableDepartamentos);

        javax.swing.GroupLayout jPanelVerDptosLayout = new javax.swing.GroupLayout(jPanelVerDptos);
        jPanelVerDptos.setLayout(jPanelVerDptosLayout);
        jPanelVerDptosLayout.setHorizontalGroup(
            jPanelVerDptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVerDptosLayout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(340, Short.MAX_VALUE))
            .addGroup(jPanelVerDptosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanelVerDptosLayout.setVerticalGroup(
            jPanelVerDptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVerDptosLayout.createSequentialGroup()
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneDepartamentos.addTab("Ver", jPanelVerDptos);

        jPanelRegistroDptos.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldNombreDpto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldNombreDpto.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldNombreDpto.setText("Departamento");
        jTextFieldNombreDpto.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jComboBoxEncargado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxEncargado.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxEncargado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Encargado(Opcional)" }));
        jComboBoxEncargado.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jScrollPane1.setBorder(null);

        jTextPaneDescripcion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextPaneDescripcion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextPaneDescripcion.setForeground(new java.awt.Color(102, 102, 102));
        jTextPaneDescripcion.setText("Descripcion(Opcional)");
        jScrollPane1.setViewportView(jTextPaneDescripcion);

        jButtonRegistrar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonRegistrar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.setToolTipText("");
        jButtonRegistrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonLimpiar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.setToolTipText("");
        jButtonLimpiar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegistroDptosLayout = new javax.swing.GroupLayout(jPanelRegistroDptos);
        jPanelRegistroDptos.setLayout(jPanelRegistroDptosLayout);
        jPanelRegistroDptosLayout.setHorizontalGroup(
            jPanelRegistroDptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroDptosLayout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addGroup(jPanelRegistroDptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxEncargado, javax.swing.GroupLayout.Alignment.LEADING, 0, 447, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelRegistroDptosLayout.createSequentialGroup()
                        .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addComponent(jTextFieldNombreDpto, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(346, Short.MAX_VALUE))
        );
        jPanelRegistroDptosLayout.setVerticalGroup(
            jPanelRegistroDptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroDptosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldNombreDpto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jComboBoxEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanelRegistroDptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jTabbedPaneDepartamentos.addTab("Registro", jPanelRegistroDptos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneDepartamentos, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneDepartamentos, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        registrar();
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JComboBox<String> jComboBoxEncargado;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JPanel jPanelBuscar;
    private javax.swing.JPanel jPanelRegistroDptos;
    private javax.swing.JPanel jPanelVerDptos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPaneDepartamentos;
    private javax.swing.JTable jTableDepartamentos;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldNombreDpto;
    private javax.swing.JTextPane jTextPaneDescripcion;
    // End of variables declaration//GEN-END:variables

    @Override
    public void registrar() {
        if (!buscar()) {
            if (validar()) {
                JOptionPane.showMessageDialog(null, "Se ha registrado correctamente el departamento", "Departamento", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo crear el departamento", "Departamento", JOptionPane.ERROR_MESSAGE);
            }
        }else {
            JOptionPane.showMessageDialog(null, "El departamento a crear ya est√° registrado", "Departamento", JOptionPane.ERROR_MESSAGE);
        }
        
    }

    @Override
    public boolean validar() {
        try{
            if(this.jTextFieldNombreDpto.getText().equals("")){
                return false;
            }
            String nombreDpto = this.jTextFieldNombreDpto.getText();
            String descripcion = "";
            String[] encargado = null;
            int documento = -1;
            if(this.jComboBoxEncargado.getSelectedIndex() != 0){
                encargado = ((String)this.jComboBoxEncargado.getSelectedItem()).split("-");
                documento = Integer.parseInt(encargado[0]);
            }
            if(!this.jTextPaneDescripcion.getText().equals(this.TEXTPANE_DESCRIPCION)){
                descripcion = this.jTextPaneDescripcion.getText();
            }
            
            return this.principal.crearDepartamento(nombreDpto, descripcion, documento);
            
        }catch(NullPointerException | NumberFormatException | IndexOutOfBoundsException ex){
            System.out.println(ex.getMessage());
            return false;
        }
    }

    private void eventuarComponentes() {
        agregarPlaceHolder();
    }

    @Override
    public void agregarPlaceHolder() {
        this.jTextFieldNombreDpto.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreDpto, TEXTFIELD_DEPARTAMENTO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreDpto, "", TEXTFIELD_DEPARTAMENTO);
            }
        });
        
        this.jTextPaneDescripcion.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextPaneDescripcion, TEXTPANE_DESCRIPCION, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextPaneDescripcion, "", TEXTPANE_DESCRIPCION);
            }
        });
        
        this.jTextFieldBuscar.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, TEXTFIELD_BUSCAR, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, "", TEXTFIELD_BUSCAR);
            }
        });
        
    }
    
    @Override
    public Object cargarDatosPrincipales() {
        String[] columnas = {"Departamento", "Encargado", "Descripci√≥n"};
        String[][] departamentos =  this.principal.obtenerDepartamentos(columnas.length);
        DefaultTableModel modelo = new DefaultTableModel(departamentos, columnas);
        this.jTableDepartamentos.setModel(modelo);
        //this.jListDepartamentos.setModel(modelo);
        return modelo;
    }

    @Override
    public boolean buscar() {
        String departamento = this.jTextFieldNombreDpto.getText();
        return this.principal.buscarDepartamento(departamento);
    }

    private void cargarDirectivos() {
        String[] directivos = this.principal.obtenerDirectivosPorDocumento();
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        modelo.addElement("Encargado(Opcional)");
        for(int i = 0 ; i < directivos.length; i++){
            modelo.addElement(directivos[i]);
        }
        
        this.jComboBoxEncargado.setModel(modelo);
    }

    @Override
    public void limpiar() {
        agregarTextosDefecto();
        ingresarPosicionComboBox(0, jPanelRegistroDptos);
    }

    @Override
    public void agregarItemsAMenu() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void agregarTextosDefecto() {
        this.jTextFieldNombreDpto.setText(TEXTFIELD_DEPARTAMENTO);
        this.jTextPaneDescripcion.setText(TEXTPANE_DESCRIPCION);
        this.jTextFieldBuscar.setText(TEXTFIELD_BUSCAR);
    }
}
