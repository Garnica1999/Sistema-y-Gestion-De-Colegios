/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.paneles.directivo;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import vista.Principal;
import vista.interfaces.IConstanteComponentes;
import vista.paneles.PanelComponents;
import static vista.interfaces.IConstanteComponentes.TEXTFIELD_BARRIO;
import static vista.interfaces.IConstanteComponentes.TEXTFIELD_BUSCAR;

/**
 *
 * @author Carlos
 */
@SuppressWarnings("serial")
public class PanelEPS extends PanelComponents implements IConstanteComponentes{

    private final Principal principal;
    private Timer timerBuscar;
    /**
     * Creates new form PanelEPS
     * @param principal
     */
    public PanelEPS(Principal principal) {
        this.principal = principal;
        initComponents();
        
        agregarPlaceHolder();
        try {
            agregarFocusBorder(jPanelBuscar, jPanelEPS, jPanelRegistro);
            cambiarEstiloTabbePane(jTabbedPaneEPS);
            modificarTemaComboBox(jPanelRegistro);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(PanelEPS.class.getName()).log(Level.SEVERE, null, ex);
        }
        eventuarTabs(jTabbedPaneEPS);
        modificarTabla(jTableEPS);
        cargarDatosPrincipales();
        limpiar();
        iniciarTimerBuscar(jTableEPS, jTextFieldBuscar, timerBuscar);
        //this.jTabbedPaneEPS.setUI(new BasicTabbedPaneUI());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneEPS = new javax.swing.JTabbedPane();
        jPanelEPS = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableEPS = new javax.swing.JTable();
        jPanelBuscar = new javax.swing.JPanel();
        jLabelBuscar = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jPanelRegistro = new javax.swing.JPanel();
        jTextFieldTelefono = new javax.swing.JTextField();
        jTextFieldBarrio = new javax.swing.JTextField();
        jTextFieldDireccion = new javax.swing.JTextField();
        jTextFieldLocalidad = new javax.swing.JTextField();
        jTextFieldNombreEPS = new javax.swing.JTextField();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();

        setBackground(new java.awt.Color(88, 165, 240));

        jTabbedPaneEPS.setBackground(new java.awt.Color(88, 165, 240));
        jTabbedPaneEPS.setForeground(new java.awt.Color(255, 255, 255));

        jPanelEPS.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane3.setBorder(null);

        jTableEPS.setAutoCreateRowSorter(true);
        jTableEPS.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jTableEPS.setForeground(new java.awt.Color(110, 110, 110));
        jTableEPS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre EPS", "Teléfono", "Dirección", "Barrio", "Localidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEPS.setGridColor(new java.awt.Color(204, 204, 204));
        jTableEPS.setSelectionBackground(new java.awt.Color(88, 165, 240));
        jTableEPS.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jTableEPS);

        jPanelBuscar.setBackground(new java.awt.Color(255, 255, 255));

        jLabelBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/busqueda/search.png"))); // NOI18N

        jTextFieldBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldBuscar.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldBuscar.setText("Buscar");
        jTextFieldBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelBuscarLayout = new javax.swing.GroupLayout(jPanelBuscar);
        jPanelBuscar.setLayout(jPanelBuscarLayout);
        jPanelBuscarLayout.setHorizontalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelBuscarLayout.setVerticalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldBuscar)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelEPSLayout = new javax.swing.GroupLayout(jPanelEPS);
        jPanelEPS.setLayout(jPanelEPSLayout);
        jPanelEPSLayout.setHorizontalGroup(
            jPanelEPSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEPSLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(jPanelEPSLayout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(349, Short.MAX_VALUE))
        );
        jPanelEPSLayout.setVerticalGroup(
            jPanelEPSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEPSLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneEPS.addTab("Ver", jPanelEPS);

        jPanelRegistro.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldTelefono.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldTelefono.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldTelefono.setText("Teléfono");
        jTextFieldTelefono.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldBarrio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldBarrio.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldBarrio.setText("Barrio");
        jTextFieldBarrio.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldDireccion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldDireccion.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldDireccion.setText("Dirección");
        jTextFieldDireccion.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldLocalidad.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldLocalidad.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldLocalidad.setText("Localidad");
        jTextFieldLocalidad.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldNombreEPS.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldNombreEPS.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldNombreEPS.setText("Nombre EPS");
        jTextFieldNombreEPS.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jButtonRegistrar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonRegistrar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.setToolTipText("");
        jButtonRegistrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonLimpiar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.setToolTipText("");
        jButtonLimpiar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegistroLayout = new javax.swing.GroupLayout(jPanelRegistro);
        jPanelRegistro.setLayout(jPanelRegistroLayout);
        jPanelRegistroLayout.setHorizontalGroup(
            jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelRegistroLayout.createSequentialGroup()
                        .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldTelefono)
                    .addComponent(jTextFieldBarrio)
                    .addComponent(jTextFieldLocalidad)
                    .addComponent(jTextFieldNombreEPS, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(332, Short.MAX_VALUE))
        );
        jPanelRegistroLayout.setVerticalGroup(
            jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldNombreEPS, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jTextFieldBarrio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jTextFieldLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        jTabbedPaneEPS.addTab("Registro", jPanelRegistro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPaneEPS, javax.swing.GroupLayout.PREFERRED_SIZE, 1068, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneEPS)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        registrar();
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JPanel jPanelBuscar;
    private javax.swing.JPanel jPanelEPS;
    private javax.swing.JPanel jPanelRegistro;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPaneEPS;
    private javax.swing.JTable jTableEPS;
    private javax.swing.JTextField jTextFieldBarrio;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldDireccion;
    private javax.swing.JTextField jTextFieldLocalidad;
    private javax.swing.JTextField jTextFieldNombreEPS;
    private javax.swing.JTextField jTextFieldTelefono;
    // End of variables declaration//GEN-END:variables

    @Override
    public void registrar() {
        if(!buscar()){
            if(validar()){
                JOptionPane.showMessageDialog(null, "Se ha registrado la PES correctamente", "EPS y Salud Estudiantil", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo registrar la EPS", "EPS y Salud Estudiantil", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "La EPS a registrar ya existe", "EPS y Salud Estudiantil", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override
    public void limpiar() {
        agregarTextosDefecto();
        ingresarPosicionComboBox(0, jPanelRegistro);
    }

    @Override
    public boolean buscar() {
        String nombreEps = this.jTextFieldNombreEPS.getText();
        return this.principal.existeEps(nombreEps);
    }

    @Override
    public boolean validar() {
        try{
            if(this.jTextFieldBarrio.getText().equals("")){
                return false;
            } else if (this.jTextFieldDireccion.getText().equals("")){
                return false;
            } else if (this.jTextFieldLocalidad.getText().equals("")){
                return false;
            } else if (this.jTextFieldNombreEPS.getText().equals("")){
                return false;
            } else if (this.jTextFieldTelefono.getText().equals("")){
                return false;
            }
            
            String nombreEPS = this.jTextFieldNombreEPS.getText();
            long telefono = Long.parseLong(this.jTextFieldTelefono.getText());
            String barrio = this.jTextFieldBarrio.getText();
            String localidad = this.jTextFieldLocalidad.getText();
            String direccion = this.jTextFieldDireccion.getText();
            
            return this.principal.crearEps(nombreEPS, telefono, barrio, localidad, direccion);
        }catch(NullPointerException | IndexOutOfBoundsException | NumberFormatException ex){
            System.out.println(ex.getMessage());
            return false;
        }
    }

    /**
     *
     */
    @Override
    public void agregarPlaceHolder() {
        this.jTextFieldBarrio.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldBarrio, TEXTFIELD_BARRIO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldBarrio, "", TEXTFIELD_BARRIO);

            }
        });
        this.jTextFieldDireccion.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldDireccion, TEXTFIELD_DIRECCION, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldDireccion, "", TEXTFIELD_DIRECCION);

            }
        });
        this.jTextFieldLocalidad.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldLocalidad, TEXTFIELD_LOCALIDAD, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldLocalidad, "", TEXTFIELD_LOCALIDAD);

            }
        });
        this.jTextFieldNombreEPS.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreEPS, TEXTFIELD_NOMBREEPS, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreEPS, "", TEXTFIELD_NOMBREEPS);

            }
        });
        this.jTextFieldTelefono.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldTelefono, TEXTFIELD_TELEFONO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldTelefono, "", TEXTFIELD_TELEFONO);

            }
        });
        this.jTextFieldBuscar.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, TEXTFIELD_BUSCAR, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, "", TEXTFIELD_BUSCAR);
            }
        });
    }

    @Override
    public Object cargarDatosPrincipales() {
        String columnas[] = {"Nombre EPS","Teléfono","Dirección", "Barrio", "Localidad"};
        String[][] eps = this.principal.obtenerTodasLasEps(columnas.length);
        DefaultTableModel modelo = new DefaultTableModel(eps, columnas);
        /*for(int i = 0 ; i < this.principal.obtenerCantidadEps(); i++){
            modelo.addRow(eps[i]);
        }*/
        this.jTableEPS.setModel(modelo);
        return modelo;
    }

    @Override
    public void agregarItemsAMenu() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void agregarTextosDefecto() {
        this.jTextFieldBarrio.setText(TEXTFIELD_BARRIO);
        this.jTextFieldBuscar.setText(TEXTFIELD_BUSCAR);
        this.jTextFieldDireccion.setText(TEXTFIELD_DIRECCION);
        this.jTextFieldLocalidad.setText(TEXTFIELD_LOCALIDAD);
        this.jTextFieldNombreEPS.setText(TEXTFIELD_NOMBREEPS);
        this.jTextFieldTelefono.setText(TEXTFIELD_TELEFONO);
    }
}
