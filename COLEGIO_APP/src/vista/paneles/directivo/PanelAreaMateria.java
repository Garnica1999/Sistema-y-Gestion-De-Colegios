/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.paneles.directivo;

import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import vista.Principal;
import vista.interfaces.IConstanteComponentes;
import vista.paneles.PanelComponents;

/**
 *
 * @author Carlos
 */
@SuppressWarnings("serial")
public class PanelAreaMateria extends PanelComponents implements IConstanteComponentes{

    private final Principal principal;
    private Timer timerBuscar;
    /**
     * Creates new form PanelAreaMateria
     */
    public PanelAreaMateria(Principal principal) {
        this.principal = principal;
        initComponents();
        eventuarTabs(jTabbedPaneMateriaArea);
        eventuarListArea();
        agregarPlaceHolder();
        modificarTabla();
        
        try{
            agregarFocusBorder(jPanelBuscarArea, jPanelBuscarMateria, jPanelRegistroAreas, jPanelRegistroMaterias, jPanelVerAreasMaterias);
            modificarTemaComboBox(jPanelRegistroAreas, jPanelRegistroMaterias);
            cambiarEstiloTabbePane(jTabbedPaneMateriaArea);
        }catch(IllegalArgumentException ex){
            Logger.getLogger(PanelAreaMateria.class.getName()).log(Level.SEVERE, null, ex);
        }
        cargarDocentes();
        cargarDatosPrincipales();
        cargarAreaComboBox();
        limpiar();
        limpiarComponentesMateria();
        iniciarTimerBuscar(jTableMaterias, jTextFieldBuscarMaterias, timerBuscar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneMateriaArea = new javax.swing.JTabbedPane();
        jPanelVerAreasMaterias = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListAreas = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMaterias = new javax.swing.JTable();
        jPanelBuscarArea = new javax.swing.JPanel();
        jLabelBuscar = new javax.swing.JLabel();
        jTextFieldBuscarAreas = new javax.swing.JTextField();
        jPanelBuscarMateria = new javax.swing.JPanel();
        jLabelBuscar1 = new javax.swing.JLabel();
        jTextFieldBuscarMaterias = new javax.swing.JTextField();
        jPanelRegistroAreas = new javax.swing.JPanel();
        jTextFieldNombreArea = new javax.swing.JTextField();
        jComboBoxDocenteEncargado = new javax.swing.JComboBox<>();
        jButtonRegistrarArea = new javax.swing.JButton();
        jButtonLimpiarArea = new javax.swing.JButton();
        jPanelRegistroMaterias = new javax.swing.JPanel();
        jTextFieldNombreMateria = new javax.swing.JTextField();
        jComboBoxArea = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPaneDescripcionMateria = new javax.swing.JTextPane();
        jButtonRegistrarMateria = new javax.swing.JButton();
        jButtonLimpiarMateria = new javax.swing.JButton();

        setBackground(new java.awt.Color(88, 165, 240));

        jTabbedPaneMateriaArea.setBackground(new java.awt.Color(88, 165, 240));
        jTabbedPaneMateriaArea.setForeground(new java.awt.Color(255, 255, 255));

        jPanelVerAreasMaterias.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBorder(null);

        jListAreas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jListAreas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jListAreas.setForeground(new java.awt.Color(110, 110, 110));
        jListAreas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListAreas.setSelectionBackground(new java.awt.Color(88, 165, 240));
        jScrollPane1.setViewportView(jListAreas);

        jScrollPane2.setBorder(null);

        jTableMaterias.setAutoCreateRowSorter(true);
        jTableMaterias.setForeground(new java.awt.Color(110, 110, 110));
        jTableMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Materia", "Descripci√≥n", "Area"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMaterias.setGridColor(new java.awt.Color(204, 204, 204));
        jTableMaterias.setSelectionBackground(new java.awt.Color(88, 165, 240));
        jScrollPane2.setViewportView(jTableMaterias);

        jPanelBuscarArea.setBackground(new java.awt.Color(255, 255, 255));

        jLabelBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/busqueda/search.png"))); // NOI18N

        jTextFieldBuscarAreas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldBuscarAreas.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldBuscarAreas.setText("Buscar");
        jTextFieldBuscarAreas.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelBuscarAreaLayout = new javax.swing.GroupLayout(jPanelBuscarArea);
        jPanelBuscarArea.setLayout(jPanelBuscarAreaLayout);
        jPanelBuscarAreaLayout.setHorizontalGroup(
            jPanelBuscarAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarAreaLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBuscarAreas))
        );
        jPanelBuscarAreaLayout.setVerticalGroup(
            jPanelBuscarAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldBuscarAreas)
            .addGroup(jPanelBuscarAreaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
        );

        jPanelBuscarMateria.setBackground(new java.awt.Color(255, 255, 255));

        jLabelBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/busqueda/search.png"))); // NOI18N

        jTextFieldBuscarMaterias.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldBuscarMaterias.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldBuscarMaterias.setText("Buscar");
        jTextFieldBuscarMaterias.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelBuscarMateriaLayout = new javax.swing.GroupLayout(jPanelBuscarMateria);
        jPanelBuscarMateria.setLayout(jPanelBuscarMateriaLayout);
        jPanelBuscarMateriaLayout.setHorizontalGroup(
            jPanelBuscarMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarMateriaLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelBuscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBuscarMaterias))
        );
        jPanelBuscarMateriaLayout.setVerticalGroup(
            jPanelBuscarMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldBuscarMaterias)
            .addGroup(jPanelBuscarMateriaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscar1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelVerAreasMateriasLayout = new javax.swing.GroupLayout(jPanelVerAreasMaterias);
        jPanelVerAreasMaterias.setLayout(jPanelVerAreasMateriasLayout);
        jPanelVerAreasMateriasLayout.setHorizontalGroup(
            jPanelVerAreasMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelVerAreasMateriasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelVerAreasMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(jPanelBuscarArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58)
                .addGroup(jPanelVerAreasMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                    .addComponent(jPanelBuscarMateria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelVerAreasMateriasLayout.setVerticalGroup(
            jPanelVerAreasMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVerAreasMateriasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelVerAreasMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelBuscarArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelBuscarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelVerAreasMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        jTabbedPaneMateriaArea.addTab("Ver", jPanelVerAreasMaterias);

        jPanelRegistroAreas.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldNombreArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldNombreArea.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldNombreArea.setText("Nombre Del √Årea");
        jTextFieldNombreArea.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jComboBoxDocenteEncargado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxDocenteEncargado.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxDocenteEncargado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Docente Encargado" }));
        jComboBoxDocenteEncargado.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jButtonRegistrarArea.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRegistrarArea.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonRegistrarArea.setForeground(new java.awt.Color(88, 165, 240));
        jButtonRegistrarArea.setText("Registrar");
        jButtonRegistrarArea.setToolTipText("");
        jButtonRegistrarArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonRegistrarArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarAreaActionPerformed(evt);
            }
        });

        jButtonLimpiarArea.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLimpiarArea.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonLimpiarArea.setForeground(new java.awt.Color(88, 165, 240));
        jButtonLimpiarArea.setText("Limpiar");
        jButtonLimpiarArea.setToolTipText("");
        jButtonLimpiarArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonLimpiarArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarAreaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegistroAreasLayout = new javax.swing.GroupLayout(jPanelRegistroAreas);
        jPanelRegistroAreas.setLayout(jPanelRegistroAreasLayout);
        jPanelRegistroAreasLayout.setHorizontalGroup(
            jPanelRegistroAreasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroAreasLayout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addGroup(jPanelRegistroAreasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNombreArea, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                    .addComponent(jComboBoxDocenteEncargado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistroAreasLayout.createSequentialGroup()
                        .addComponent(jButtonRegistrarArea, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLimpiarArea, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(325, Short.MAX_VALUE))
        );
        jPanelRegistroAreasLayout.setVerticalGroup(
            jPanelRegistroAreasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroAreasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldNombreArea, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jComboBoxDocenteEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanelRegistroAreasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrarArea, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimpiarArea, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(449, Short.MAX_VALUE))
        );

        jTabbedPaneMateriaArea.addTab("Registro de Area", jPanelRegistroAreas);

        jPanelRegistroMaterias.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldNombreMateria.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldNombreMateria.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldNombreMateria.setText("Nombre de la materia");
        jTextFieldNombreMateria.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jComboBoxArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxArea.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxArea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "√Årea" }));
        jComboBoxArea.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jScrollPane3.setBorder(null);

        jTextPaneDescripcionMateria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextPaneDescripcionMateria.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextPaneDescripcionMateria.setForeground(new java.awt.Color(102, 102, 102));
        jTextPaneDescripcionMateria.setText("Descripcion(Opcional)");
        jScrollPane3.setViewportView(jTextPaneDescripcionMateria);

        jButtonRegistrarMateria.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRegistrarMateria.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonRegistrarMateria.setForeground(new java.awt.Color(88, 165, 240));
        jButtonRegistrarMateria.setText("Registrar");
        jButtonRegistrarMateria.setToolTipText("");
        jButtonRegistrarMateria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonRegistrarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarMateriaActionPerformed(evt);
            }
        });

        jButtonLimpiarMateria.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLimpiarMateria.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonLimpiarMateria.setForeground(new java.awt.Color(88, 165, 240));
        jButtonLimpiarMateria.setText("Limpiar");
        jButtonLimpiarMateria.setToolTipText("");
        jButtonLimpiarMateria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonLimpiarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarMateriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegistroMateriasLayout = new javax.swing.GroupLayout(jPanelRegistroMaterias);
        jPanelRegistroMaterias.setLayout(jPanelRegistroMateriasLayout);
        jPanelRegistroMateriasLayout.setHorizontalGroup(
            jPanelRegistroMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroMateriasLayout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addGroup(jPanelRegistroMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistroMateriasLayout.createSequentialGroup()
                        .addComponent(jButtonRegistrarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLimpiarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3)
                    .addComponent(jComboBoxArea, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldNombreMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(331, Short.MAX_VALUE))
        );
        jPanelRegistroMateriasLayout.setVerticalGroup(
            jPanelRegistroMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroMateriasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldNombreMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jComboBoxArea, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanelRegistroMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimpiarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(144, 144, 144))
        );

        jTabbedPaneMateriaArea.addTab("Registro de Materias", jPanelRegistroMaterias);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMateriaArea)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMateriaArea)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRegistrarAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarAreaActionPerformed
        registrar();
    }//GEN-LAST:event_jButtonRegistrarAreaActionPerformed

    private void jButtonLimpiarAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarAreaActionPerformed
        limpiar();
    }//GEN-LAST:event_jButtonLimpiarAreaActionPerformed

    private void jButtonRegistrarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarMateriaActionPerformed
        registrarMateria();
    }//GEN-LAST:event_jButtonRegistrarMateriaActionPerformed

    private void jButtonLimpiarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarMateriaActionPerformed
        limpiarComponentesMateria();
    }//GEN-LAST:event_jButtonLimpiarMateriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpiarArea;
    private javax.swing.JButton jButtonLimpiarMateria;
    private javax.swing.JButton jButtonRegistrarArea;
    private javax.swing.JButton jButtonRegistrarMateria;
    private javax.swing.JComboBox<String> jComboBoxArea;
    private javax.swing.JComboBox<String> jComboBoxDocenteEncargado;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JLabel jLabelBuscar1;
    private javax.swing.JList<String> jListAreas;
    private javax.swing.JPanel jPanelBuscarArea;
    private javax.swing.JPanel jPanelBuscarMateria;
    private javax.swing.JPanel jPanelRegistroAreas;
    private javax.swing.JPanel jPanelRegistroMaterias;
    private javax.swing.JPanel jPanelVerAreasMaterias;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPaneMateriaArea;
    private javax.swing.JTable jTableMaterias;
    private javax.swing.JTextField jTextFieldBuscarAreas;
    private javax.swing.JTextField jTextFieldBuscarMaterias;
    private javax.swing.JTextField jTextFieldNombreArea;
    private javax.swing.JTextField jTextFieldNombreMateria;
    private javax.swing.JTextPane jTextPaneDescripcionMateria;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean buscar() {
        String nombreArea = this.jTextFieldNombreArea.getText();
        return this.principal.buscarArea(nombreArea);
    }

    @Override
    public boolean validar() {
        try{
            if(this.jTextFieldNombreArea.getText().equals("")){
                return false;
            } else if(this.jComboBoxDocenteEncargado.getSelectedIndex() == 0){
                return false;
            }
            
            String[] docentes = ((String)this.jComboBoxDocenteEncargado.getSelectedItem()).split("-");
            long documento = Long.parseLong(docentes[0]);
            String nombreArea = this.jTextFieldNombreArea.getText();
            return this.principal.crearArea(nombreArea, documento);
        }catch(NullPointerException | NumberFormatException | IndexOutOfBoundsException ex){
            return false;
        }
    }

    private void cargarDocentes() {
        String[] docentes = this.principal.obtenerDocentesPorDocumento();
        
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        modelo.addElement("Docente Encargado");
        for(int i = 0 ; i < docentes.length; i++){
            modelo.addElement(docentes[i]);
        }
        
        this.jComboBoxDocenteEncargado.setModel(modelo);
    }

    @Override
    public Object cargarDatosPrincipales() {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        String[] areas = this.principal.obtenerAreas();
        if(areas.length == 0){
            modelo.addElement("No hay √Åreas registradas");
        }
        for(int i = 0 ; i < areas.length; i++){
            modelo.addElement(areas[i]);
        }
        this.jListAreas.setModel(modelo);
        return modelo;
    }

    @Override
    public void eventuarTabs(JTabbedPane tp) {
        this.jTabbedPaneMateriaArea.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                cargarDatosPrincipales();
                cargarAreaComboBox();
            }
        });
    }

    private void cargarAreaComboBox() {
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        String[] areas = this.principal.obtenerAreas();
        modelo.addElement("√Åreas");
        for(int i = 0 ; i < areas.length; i++) modelo.addElement(areas[i]);
        
        this.jComboBoxArea.setModel(modelo);
    }

    private void registrarMateria() {
        if(validarMateria()){
            JOptionPane.showMessageDialog(null, "Se ha registrado la materia correctamente", "√Åreas y Materias", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private boolean validarMateria() {
        try{
            if(this.jTextFieldNombreMateria.getText().equals("")){
                return false;
            }else if(this.jComboBoxArea.getSelectedIndex() == 0){
                return false;
            }
            
            String nombreMateria = this.jTextFieldNombreMateria.getText();
            String nombreArea = (String)this.jComboBoxArea.getSelectedItem();
            String descripcion = "";
            if(!this.jTextPaneDescripcionMateria.getText().equals("Descripcion(Opcional)")){
                descripcion = this.jTextPaneDescripcionMateria.getText();
            }
            
            return this.principal.crearMateriaBase(nombreMateria, nombreArea, descripcion);
        }catch(NullPointerException | IndexOutOfBoundsException | NumberFormatException ex){
            System.out.println(ex.getMessage());
            return false;
        }
    }

    private void eventuarListArea() {
        this.jListAreas.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                
                if(e.getValueIsAdjusting()){
                    cargarMaterias();
                }
                
            }
        });
    }
    
    private void cargarMaterias(){
        String area = this.jListAreas.getSelectedValue();
        String[] columnas = {"Materia", "Descripci√≥n", "√Årea"};
        String[][] materias = this.principal.cargarMateriasPorArea(area,columnas.length);
        
        DefaultTableModel modelo = new DefaultTableModel(materias, columnas);
        this.jTableMaterias.setModel(modelo);
    }
    

    private void modificarTabla() {
        modificarGridTabla(jTableMaterias);
        modificarAlturaFilas(jTableMaterias);
        renderizarTabla(jTableMaterias);
    }

    @Override
    public void agregarPlaceHolder() {
        this.jTextFieldBuscarAreas.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscarAreas, TEXTFIELD_BUSCAR, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscarAreas, "", TEXTFIELD_BUSCAR);
            }
        });
        
        this.jTextFieldBuscarMaterias.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscarMaterias, TEXTFIELD_BUSCAR, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscarMaterias, "", TEXTFIELD_BUSCAR);
            }
        });
        
        this.jTextFieldNombreArea.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreArea, TEXTFIELD_NOMBREAREA, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreArea, "", TEXTFIELD_NOMBREAREA);
            }
        });
        
        this.jTextFieldNombreMateria.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreMateria, TEXTFIELD_NOMBREMATERIA, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreMateria, "", TEXTFIELD_NOMBREMATERIA);
            }
        });
        
        this.jTextPaneDescripcionMateria.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextPaneDescripcionMateria, TEXTPANE_DESCRIPCION, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextPaneDescripcionMateria, "", TEXTPANE_DESCRIPCION);
            }
        });
        
        
    }

    @Override
    protected void iniciarTimerBuscar(JTable tabla, JTextField buscar, Timer timer) {
        this.timerBuscar = new Timer(10, (ActionEvent e)->{
            buscarEnTabla(tabla, buscar);
            habilitarBusquedaLista();
        });
        timerBuscar.start();
    }

    private void habilitarBusquedaLista() {
        String texto = this.jTextFieldBuscarAreas.getText();
        if (!texto.equals(TEXTFIELD_BUSCAR) || texto.equals("")) {
            String valores[] = this.principal.obtenerAreas();
            DefaultListModel<String> modelo = (DefaultListModel<String>) this.jListAreas.getModel();
            for (String s : valores) {
                if (!s.startsWith(texto)) {
                    if (modelo.contains(s)) {
                        modelo.removeElement(s);
                    }
                } else {
                    if (!modelo.contains(s)) {
                        modelo.addElement(s);
                    }
                }
            }
        }
    }

    @Override
    public void registrar() {
        if (!buscar()) {
            if (validar()) {
                JOptionPane.showMessageDialog(null, "Se ha registrado el area correctamente", "Materias y √Åreas", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    @Override
    public void agregarItemsAMenu() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void agregarTextosDefecto() {
        
        this.ingresarPosicionComboBox(0, jPanelRegistroAreas);
    }

    @Override
    public void limpiar() {
        this.jTextFieldNombreArea.setText(TEXTFIELD_NOMBREAREA);
        this.ingresarPosicionComboBox(WIDTH, jPanelRegistroAreas);
    }

    private void limpiarComponentesMateria() {
        this.jTextPaneDescripcionMateria.setText(TEXTPANE_DESCRIPCION);
        this.jTextFieldNombreMateria.setText(TEXTFIELD_NOMBREMATERIA);
        this.ingresarPosicionComboBox(0, jPanelRegistroMaterias);
    } 
}
