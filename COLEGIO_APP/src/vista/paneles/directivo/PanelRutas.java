/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.paneles.directivo;

import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import vista.Principal;
import vista.interfaces.IConstanteComponentes;
import vista.paneles.PanelComponents;
/**
 *
 * @author Carlos
 */
@SuppressWarnings("serial")
public class PanelRutas extends PanelComponents implements IConstanteComponentes{
    
    private final Principal principal;
    private JMenuItem jMenuItemAgregarEstudiantes;
    private JMenuItem jMenuItemEliminar;
    private Timer timerBuscar;
    /**
     * Creates new form PanelRutas
     * @param principal
     */
    public PanelRutas(Principal principal) {
        this.principal = principal;
        initComponents();
        cargarDatos();
        agregarPlaceHolder();
        eventuarComponentes();
        modificarTabla(this.jTableRutas);
        try {
            agregarFocusBorder(jPanelBuscar, jPanelRegistro, jPanelRutas);
            modificarTemaComboBox(this.jPanelRegistro);
            cambiarEstiloTabbePane(jTabbedPaneRutas);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(PanelRutas.class.getName()).log(Level.SEVERE, null, ex);
        }
        iniciarTimerBuscar(jTableRutas, jTextFieldBuscar, timerBuscar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuRutas = new javax.swing.JPopupMenu();
        jTabbedPaneRutas = new javax.swing.JTabbedPane();
        jPanelRutas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRutas = new javax.swing.JTable();
        jPanelBuscar = new javax.swing.JPanel();
        jLabelBuscar = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jPanelRegistro = new javax.swing.JPanel();
        jTextFieldPlaca = new javax.swing.JTextField();
        jTextFieldCapacidad = new javax.swing.JTextField();
        jTextFieldDestino = new javax.swing.JTextField();
        jComboBoxDia = new javax.swing.JComboBox<>();
        jLabelInformacion3 = new javax.swing.JLabel();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jComboBoxMes = new javax.swing.JComboBox<>();
        jComboBoxAnio = new javax.swing.JComboBox<>();

        jPopupMenuRutas.setInvoker(jTableRutas);

        setBackground(new java.awt.Color(88, 165, 240));

        jTabbedPaneRutas.setBackground(new java.awt.Color(88, 165, 240));
        jTabbedPaneRutas.setForeground(new java.awt.Color(255, 255, 255));

        jPanelRutas.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBorder(null);

        jTableRutas.setAutoCreateRowSorter(true);
        jTableRutas.setForeground(new java.awt.Color(110, 110, 110));
        jTableRutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableRutas.setGridColor(new java.awt.Color(204, 204, 204));
        jTableRutas.setSelectionBackground(new java.awt.Color(88, 165, 240));
        jTableRutas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableRutas);

        jPanelBuscar.setBackground(new java.awt.Color(255, 255, 255));

        jLabelBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/busqueda/search.png"))); // NOI18N

        jTextFieldBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldBuscar.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldBuscar.setText("Buscar");
        jTextFieldBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelBuscarLayout = new javax.swing.GroupLayout(jPanelBuscar);
        jPanelBuscar.setLayout(jPanelBuscarLayout);
        jPanelBuscarLayout.setHorizontalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelBuscarLayout.setVerticalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldBuscar)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelRutasLayout = new javax.swing.GroupLayout(jPanelRutas);
        jPanelRutas.setLayout(jPanelRutasLayout);
        jPanelRutasLayout.setHorizontalGroup(
            jPanelRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRutasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRutasLayout.createSequentialGroup()
                .addContainerGap(325, Short.MAX_VALUE)
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(319, 319, 319))
        );
        jPanelRutasLayout.setVerticalGroup(
            jPanelRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRutasLayout.createSequentialGroup()
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneRutas.addTab("Ver", jPanelRutas);

        jPanelRegistro.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldPlaca.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldPlaca.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldPlaca.setText("Placa");
        jTextFieldPlaca.setToolTipText("");
        jTextFieldPlaca.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldCapacidad.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldCapacidad.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldCapacidad.setText("Capacidad");
        jTextFieldCapacidad.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldDestino.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldDestino.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldDestino.setText("Destino");
        jTextFieldDestino.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jComboBoxDia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxDia.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dia(Opcional)" }));
        jComboBoxDia.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDiaActionPerformed(evt);
            }
        });

        jLabelInformacion3.setBackground(new java.awt.Color(60, 63, 65));
        jLabelInformacion3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelInformacion3.setForeground(new java.awt.Color(102, 102, 102));
        jLabelInformacion3.setText("Ãšltima fecha de Mantenimiento");

        jButtonRegistrar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonRegistrar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.setToolTipText("");
        jButtonRegistrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonLimpiar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.setToolTipText("");
        jButtonLimpiar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(102, 102, 102));

        jComboBoxMes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxMes.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mes(Opcional)", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        jComboBoxMes.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jComboBoxAnio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxAnio.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxAnio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AÃ±o(Opcional)" }));
        jComboBoxAnio.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelRegistroLayout = new javax.swing.GroupLayout(jPanelRegistro);
        jPanelRegistro.setLayout(jPanelRegistroLayout);
        jPanelRegistroLayout.setHorizontalGroup(
            jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistroLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jComboBoxAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelRegistroLayout.createSequentialGroup()
                        .addComponent(jComboBoxDia, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(jComboBoxMes, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabelInformacion3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(313, Short.MAX_VALUE))
        );
        jPanelRegistroLayout.setVerticalGroup(
            jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jTextFieldCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jTextFieldDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jLabelInformacion3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDia, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(216, Short.MAX_VALUE))
        );

        jTabbedPaneRutas.addTab("Registro", jPanelRegistro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneRutas)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneRutas)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxDiaActionPerformed

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        registrar();
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JComboBox<String> jComboBoxAnio;
    private javax.swing.JComboBox<String> jComboBoxDia;
    private javax.swing.JComboBox<String> jComboBoxMes;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JLabel jLabelInformacion3;
    private javax.swing.JPanel jPanelBuscar;
    private javax.swing.JPanel jPanelRegistro;
    private javax.swing.JPanel jPanelRutas;
    private javax.swing.JPopupMenu jPopupMenuRutas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPaneRutas;
    private javax.swing.JTable jTableRutas;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldCapacidad;
    private javax.swing.JTextField jTextFieldDestino;
    private javax.swing.JTextField jTextFieldPlaca;
    // End of variables declaration//GEN-END:variables

    @Override
    public void registrar() {
        if(!buscar()){
            if(validar()){
                JOptionPane.showMessageDialog(null,"Se ha registrado la ruta correctamente","Rutas",JOptionPane.INFORMATION_MESSAGE);
            }else {
                JOptionPane.showMessageDialog(null,"No Se ha registrado la ruta","Rutas",JOptionPane.ERROR_MESSAGE);
            }
        } else{
            JOptionPane.showMessageDialog(null,"La ruta que intenta registrar ya ha sido creada", "Rutas", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override
    public void limpiar() {
        ingresarPosicionComboBox(0, jPanelRegistro);
        agregarTextosDefecto();
    }

    @Override
    public boolean buscar() {
        String placa = this.jTextFieldPlaca.getText();
        return this.principal.buscarRuta(placa);
    }

    @Override
    public boolean validar() {
        try{
            if(this.jTextFieldCapacidad.getText().equals("")){
                return false;
            } else if(this.jTextFieldDestino.getText().equals("")){
                return false;
            } else if(this.jTextFieldPlaca.getText().equals("")){
                return false;
            }
            
            String placa = this.jTextFieldPlaca.getText();
            String localidad = this.jTextFieldDestino.getText();
            int capacidad = Integer.parseInt(this.jTextFieldCapacidad.getText());
            int dia = 0;
            int mes = 0;
            int anio = 0;
            boolean soloDiaSel = (this.jComboBoxDia.getSelectedIndex()) != 0 && 
                    (this.jComboBoxMes.getSelectedIndex()) == 0 && 
                    (this.jComboBoxAnio.getSelectedIndex()) == 0;
            boolean soloMesSel = (this.jComboBoxDia.getSelectedIndex()) == 0 && 
                    (this.jComboBoxMes.getSelectedIndex()) != 0 && 
                    (this.jComboBoxAnio.getSelectedIndex()) == 0;
            boolean soloAnioSel = (this.jComboBoxDia.getSelectedIndex()) == 0 && 
                    (this.jComboBoxMes.getSelectedIndex()) == 0 && 
                    (this.jComboBoxAnio.getSelectedIndex()) != 0;
            
            if(soloDiaSel){
                return false;
            } else if (soloMesSel){
                return false;
            }else if (soloAnioSel){
                return false;
            }else if ((this.jComboBoxDia.getSelectedIndex()) != 0 && 
                    (this.jComboBoxMes.getSelectedIndex()) != 0 && 
                    (this.jComboBoxAnio.getSelectedIndex()) != 0){
                dia = Integer.parseInt((String)this.jComboBoxDia.getSelectedItem());
                mes = this.jComboBoxMes.getSelectedIndex();
                anio = Integer.parseInt((String)this.jComboBoxAnio.getSelectedItem());
                
                return this.principal.crearRuta(placa, localidad, capacidad, dia, mes, anio);
            }else{
                return this.principal.crearRuta(placa, localidad, capacidad);
            }
            
        }catch(NullPointerException | IndexOutOfBoundsException | NumberFormatException ex){
            System.out.println(ex.getMessage());
            return false;
        }
    }

    private void cargarDatos() {
        cargarDias();
        cargarAnios();
        cargarDatosPrincipales();
    }
    
    @Override
    public Object cargarDatosPrincipales() {
        try {
            String[] columnas = {
                "Placa",
                "ID",
                "Destino",
                "Capacidad",
                "Ultimo Mantenimiento"
            };
            String[][] datos = this.principal.obtenerTodasLasRutas(columnas.length);

            DefaultTableModel modelo = new DefaultTableModel(datos, columnas);
            this.jTableRutas.setModel(modelo);
        } catch (NullPointerException | NumberFormatException e) {
            Logger.getLogger(PanelRutas.class.getName()).log(Level.SEVERE, null, e);

        }
        return this;
    }

    private void cargarDias() {
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        modelo.addElement("Dia(Opcional)");
        for (int i = 1; i <= 31; i++) {
            modelo.addElement(i + "");
        }

        this.jComboBoxDia.setModel(modelo);

    }

    private void cargarAnios() {
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        Calendar fecha = new GregorianCalendar();
        int anioAct = fecha.get(Calendar.YEAR);
        modelo.addElement("AÃ±o(Opcional)");
        for (int i = anioAct; i >= 1900; i--) {
            modelo.addElement(i + "");
        }

        this.jComboBoxAnio.setModel(modelo);
    }

    private void eventuarComponentes() {
        iniciarItemsPopMenu(this.jTableRutas, this.jPopupMenuRutas);
        eventuarTabs(jTabbedPaneRutas);
    }

    @Override
    public void agregarItemsAMenu() {
        this.jMenuItemAgregarEstudiantes = new JMenuItem("Agregar Estudiantes");
        this.jMenuItemEliminar = new JMenuItem("Eliminar Ruta");
        
        this.jMenuItemAgregarEstudiantes.addActionListener((ActionEvent e) -> {
            agregarEstudiantesARuta();
        });
        
        this.jMenuItemEliminar.addActionListener((ActionEvent e ) -> {
            eliminarRuta();
        });
        
        
        this.jPopupMenuRutas.add(jMenuItemAgregarEstudiantes);
        this.jPopupMenuRutas.add(jMenuItemEliminar);
    }
    
    private void eliminarRuta(){
        String placa = this.obtenerInformaciÃ³nCelda(this.jTableRutas, 0).toString();
        if(this.principal.eliminarRuta(placa)){
            JOptionPane.showMessageDialog(null, "La ruta se la eliminado correctamente", "Rutas", JOptionPane.INFORMATION_MESSAGE);
            this.cargarDatosPrincipales();
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo eliminar la ruta", "Rutas", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void agregarEstudiantesARuta() {
        String placa = obtenerInformaciÃ³nCelda(this.jTableRutas, 0).toString();
        this.principal.irAPanelRutasEstudiante(placa);
    }

    @Override
    public void agregarPlaceHolder() {
        this.jTextFieldPlaca.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldPlaca, TEXTFIELD_PLACA, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldPlaca, "", TEXTFIELD_PLACA);
            }
        });
        
        this.jTextFieldDestino.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldDestino, TEXTFIELD_DESTINO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldDestino, "", TEXTFIELD_DESTINO);
            }
        });
        
        this.jTextFieldBuscar.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, TEXTFIELD_BUSCAR, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, "", TEXTFIELD_BUSCAR);
            }
        });
        
        this.jTextFieldCapacidad.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldCapacidad, TEXTFIELD_CAPACIDAD, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldCapacidad, "", TEXTFIELD_CAPACIDAD);
            }
        });
    }

    @Override
    public void agregarTextosDefecto() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
