/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.paneles.directivo;

import vista.interfaces.IConstanteComponentes;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import vista.Principal;
import vista.paneles.PanelComponents;
import vista.paneles.disenio.ButtonEditor;
import vista.paneles.disenio.ButtonRenderer;

/**
 *
 * @author Carlos
 */
@SuppressWarnings("serial")
public class PanelCursos extends PanelComponents implements IConstanteComponentes{
    private final Principal principal;
    private Timer timerBuscar;
    /**
     * Creates new form PanelPersonas
     */
    public PanelCursos(Principal principal) {
        initComponents();
        this.principal = principal;
        cargarListEventos();
        agregarTextosDefecto();
        agregarPlaceHolder();
        cargarDocentes();
        cargarMateriasBase();
        eventuarTabs(jTabbedPaneCursos);

        modificarTabla(jTableCursos);
        try {
            agregarFocusBorder(jPanelRegistro, jPanelBuscar2, jPanelVer);
            modificarTemaComboBox(jPanelRegistro);
            cambiarEstiloTabbePane(jTabbedPaneCursos);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(PanelCursos.class.getName()).log(Level.SEVERE, null, ex);
        }

        cargarDatosPrincipales();
        iniciarTimerBuscar(jTableCursos, jTextFieldBuscar, timerBuscar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneCursos = new javax.swing.JTabbedPane();
        jPanelVer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCursos = new javax.swing.JTable();
        jPanelBuscar2 = new javax.swing.JPanel();
        jLabelBuscar2 = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jPanelRegistro = new javax.swing.JPanel();
        jTextFieldNombreCurso = new javax.swing.JTextField();
        jTextFieldCapacidadMax = new javax.swing.JTextField();
        jTextFieldGrado = new javax.swing.JTextField();
        jComboBoxDirectorCurso = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListMaterias = new javax.swing.JList<>();
        jLabelInformacion1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelInformacion2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListMateriasAgregar = new javax.swing.JList<>();
        jLabelInformacion3 = new javax.swing.JLabel();
        jButtonQuitarMateria = new javax.swing.JButton();
        jButtonAgregarMateria = new javax.swing.JButton();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jComboBoxDocenteDicta = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(88, 165, 240));

        jTabbedPaneCursos.setBackground(new java.awt.Color(88, 165, 240));
        jTabbedPaneCursos.setForeground(new java.awt.Color(255, 255, 255));

        jPanelVer.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBorder(null);

        jTableCursos.setAutoCreateRowSorter(true);
        jTableCursos.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jTableCursos.setForeground(new java.awt.Color(110, 110, 110));
        jTableCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableCursos.setGridColor(new java.awt.Color(204, 204, 204));
        jTableCursos.setSelectionBackground(new java.awt.Color(88, 165, 240));
        jTableCursos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableCursos);

        jPanelBuscar2.setBackground(new java.awt.Color(255, 255, 255));

        jLabelBuscar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/busqueda/search.png"))); // NOI18N

        jTextFieldBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldBuscar.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldBuscar.setText("Buscar");
        jTextFieldBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelBuscar2Layout = new javax.swing.GroupLayout(jPanelBuscar2);
        jPanelBuscar2.setLayout(jPanelBuscar2Layout);
        jPanelBuscar2Layout.setHorizontalGroup(
            jPanelBuscar2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscar2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelBuscar2Layout.setVerticalGroup(
            jPanelBuscar2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldBuscar)
            .addGroup(jPanelBuscar2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscar2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelVerLayout = new javax.swing.GroupLayout(jPanelVer);
        jPanelVer.setLayout(jPanelVerLayout);
        jPanelVerLayout.setHorizontalGroup(
            jPanelVerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVerLayout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addComponent(jPanelBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(326, Short.MAX_VALUE))
            .addGroup(jPanelVerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanelVerLayout.setVerticalGroup(
            jPanelVerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelVerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneCursos.addTab("Ver", jPanelVer);

        jPanelRegistro.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldNombreCurso.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldNombreCurso.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldNombreCurso.setToolTipText("");
        jTextFieldNombreCurso.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldCapacidadMax.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldCapacidadMax.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldCapacidadMax.setToolTipText("");
        jTextFieldCapacidadMax.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldGrado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldGrado.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldGrado.setToolTipText("");
        jTextFieldGrado.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jComboBoxDirectorCurso.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxDirectorCurso.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxDirectorCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Director de Curso" }));
        jComboBoxDirectorCurso.setToolTipText("");
        jComboBoxDirectorCurso.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxDirectorCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDirectorCursoActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(null);

        jListMaterias.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jListMaterias.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jListMaterias.setForeground(new java.awt.Color(102, 102, 102));
        jListMaterias.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "No hay Materias Registradas" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListMaterias.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListMaterias.setSelectionBackground(new java.awt.Color(88, 165, 240));
        jScrollPane3.setViewportView(jListMaterias);

        jLabelInformacion1.setBackground(new java.awt.Color(60, 63, 65));
        jLabelInformacion1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelInformacion1.setForeground(new java.awt.Color(102, 102, 102));
        jLabelInformacion1.setText("Materias Registradas");

        jSeparator1.setForeground(new java.awt.Color(102, 102, 102));

        jLabelInformacion2.setBackground(new java.awt.Color(60, 63, 65));
        jLabelInformacion2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelInformacion2.setForeground(new java.awt.Color(102, 102, 102));
        jLabelInformacion2.setText("Agregar Materias");

        jScrollPane4.setBorder(null);

        jListMateriasAgregar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jListMateriasAgregar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jListMateriasAgregar.setForeground(new java.awt.Color(102, 102, 102));
        jListMateriasAgregar.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "No has cargado ninguna materia" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListMateriasAgregar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListMateriasAgregar.setSelectionBackground(new java.awt.Color(88, 165, 240));
        jScrollPane4.setViewportView(jListMateriasAgregar);

        jLabelInformacion3.setBackground(new java.awt.Color(60, 63, 65));
        jLabelInformacion3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelInformacion3.setForeground(new java.awt.Color(102, 102, 102));
        jLabelInformacion3.setText("Materias a agregar al curso");

        jButtonQuitarMateria.setBackground(new java.awt.Color(255, 255, 255));
        jButtonQuitarMateria.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonQuitarMateria.setForeground(new java.awt.Color(88, 165, 240));
        jButtonQuitarMateria.setText("Quitar");
        jButtonQuitarMateria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240)));
        jButtonQuitarMateria.setEnabled(false);
        jButtonQuitarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarMateriaActionPerformed(evt);
            }
        });

        jButtonAgregarMateria.setBackground(new java.awt.Color(255, 255, 255));
        jButtonAgregarMateria.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonAgregarMateria.setForeground(new java.awt.Color(88, 165, 240));
        jButtonAgregarMateria.setText("Agregar");
        jButtonAgregarMateria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240)));
        jButtonAgregarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarMateriaActionPerformed(evt);
            }
        });

        jButtonRegistrar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonRegistrar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.setToolTipText("");
        jButtonRegistrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonLimpiar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.setToolTipText("");
        jButtonLimpiar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jComboBoxDocenteDicta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxDocenteDicta.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxDocenteDicta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Docente que dicta" }));
        jComboBoxDocenteDicta.setToolTipText("");
        jComboBoxDocenteDicta.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelRegistroLayout = new javax.swing.GroupLayout(jPanelRegistro);
        jPanelRegistro.setLayout(jPanelRegistroLayout);
        jPanelRegistroLayout.setHorizontalGroup(
            jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRegistroLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldCapacidadMax, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNombreCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldGrado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDirectorCurso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistroLayout.createSequentialGroup()
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelInformacion2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistroLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonQuitarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAgregarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanelRegistroLayout.createSequentialGroup()
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                                .addComponent(jLabelInformacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelInformacion3, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                                .addComponent(jComboBoxDocenteDicta, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelRegistroLayout.setVerticalGroup(
            jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNombreCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldGrado, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCapacidadMax, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDirectorCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelInformacion2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelInformacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelInformacion3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRegistroLayout.createSequentialGroup()
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonAgregarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(jButtonQuitarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxDocenteDicta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jTabbedPaneCursos.addTab("Registro", jPanelRegistro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneCursos)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneCursos)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        registrar();
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonAgregarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarMateriaActionPerformed
        agregarMateria();
    }//GEN-LAST:event_jButtonAgregarMateriaActionPerformed

    private void jComboBoxDirectorCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDirectorCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxDirectorCursoActionPerformed

    private void jButtonQuitarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarMateriaActionPerformed
        quitarMateriaAAgregar();
    }//GEN-LAST:event_jButtonQuitarMateriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregarMateria;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonQuitarMateria;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JComboBox<String> jComboBoxDirectorCurso;
    private javax.swing.JComboBox<String> jComboBoxDocenteDicta;
    private javax.swing.JLabel jLabelBuscar2;
    private javax.swing.JLabel jLabelInformacion1;
    private javax.swing.JLabel jLabelInformacion2;
    private javax.swing.JLabel jLabelInformacion3;
    private javax.swing.JList<String> jListMaterias;
    private javax.swing.JList<String> jListMateriasAgregar;
    private javax.swing.JPanel jPanelBuscar2;
    private javax.swing.JPanel jPanelRegistro;
    private javax.swing.JPanel jPanelVer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPaneCursos;
    private javax.swing.JTable jTableCursos;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldCapacidadMax;
    private javax.swing.JTextField jTextFieldGrado;
    private javax.swing.JTextField jTextFieldNombreCurso;
    // End of variables declaration//GEN-END:variables

    @Override
    public void registrar() {
        if (!buscar()) {
            if (validar()) {
                JOptionPane.showMessageDialog(null, "Se ha registrado el curso correctamente", "Cursos", JOptionPane.INFORMATION_MESSAGE);
                DefaultListModel<String> modelo = new DefaultListModel<>();
                modelo.addElement("No has cargado ninguna materia");
                jListMateriasAgregar.setModel(modelo);
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo registrar el curso", "Cursos", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "El curso ya existe", "Cursos", JOptionPane.ERROR_MESSAGE);
        }

    }

    @Override
    public void limpiar() {
        agregarTextosDefecto();
        ingresarPosicionComboBox(0, jPanelRegistro);
    }
    
    @Override
    public boolean buscar() {
        int curso = Integer.parseInt(this.jTextFieldNombreCurso.getText());
        return this.principal.buscarCurso(curso);
    }

    @Override
    public boolean validar() {
        try{
            if(this.jTextFieldNombreCurso.getText().equals("")){
                return false;
            }else if(this.jTextFieldGrado.getText().equals("")){
                return false;
            }else if(this.jTextFieldCapacidadMax.getText().equals("")){
                return false;
            }else if(this.jComboBoxDirectorCurso.getSelectedIndex() == 0){
                return false;
            }else if(jListMateriasAgregar.getModel().getElementAt(0).equals("No has cargado ninguna materia")){
                return false;
            }
            
            int numCurso = Integer.parseInt(this.jTextFieldNombreCurso.getText());
            int capacidadMaxima = Integer.parseInt(this.jTextFieldCapacidadMax.getText());
            int grado = Integer.parseInt(this.jTextFieldGrado.getText());
            String[] docentes = ((String)this.jComboBoxDirectorCurso.getSelectedItem()).split("-");
            long documento = Long.parseLong(docentes[0]);

            return this.principal.crearCurso(numCurso, capacidadMaxima, grado, documento);
        }catch(NullPointerException | IndexOutOfBoundsException | NumberFormatException ex){
            System.out.println(ex.getMessage());
            return false;
        }
    }

    private void agregarMateria() {
        try {
            if (this.jComboBoxDocenteDicta.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Para poder agregar esta materia debes seleccionar a un docente, que es el que va a dictar materia para el curso a seleccionar", "Cursos", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String nombreMateria = this.jListMaterias.getSelectedValue();
            if (!this.principal.buscarMateriaTemp(nombreMateria)) {
                String docente[] = ((String) this.jComboBoxDocenteDicta.getSelectedItem()).split("-");
                long documento = Long.parseLong(docente[0]);
                if (this.principal.crearMateria(nombreMateria, documento)) {
                    JOptionPane.showMessageDialog(null, "Se ha agregado correctamente la materia", "Cursos", JOptionPane.INFORMATION_MESSAGE);
                    agregarMateriasALista();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo agregar la materia", "Curso", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "La materia a agregar al curso ya está en la lista","Cursos",JOptionPane.ERROR_MESSAGE);
            }

        } catch (NullPointerException | NumberFormatException | IndexOutOfBoundsException ex) {
            System.out.println(ex.getMessage());
        }

    }

    @Override
    public void agregarTextosDefecto() {
        this.jTextFieldNombreCurso.setText(TEXTFIELD_CURSO);
        this.jTextFieldGrado.setText(TEXTFIELD_GRADO);
        this.jTextFieldCapacidadMax.setText(TEXTFIELD_CAPACIDAD_MAXIMA);
    }

    @Override
    public void agregarPlaceHolder() {
        this.jTextFieldNombreCurso.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreCurso, TEXTFIELD_CURSO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldNombreCurso, "", TEXTFIELD_CURSO);
            }
        });
        
        this.jTextFieldCapacidadMax.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldCapacidadMax, TEXTFIELD_CAPACIDAD_MAXIMA, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldCapacidadMax, "", TEXTFIELD_CAPACIDAD_MAXIMA);
            }
        });
        
        this.jTextFieldGrado.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldGrado, TEXTFIELD_GRADO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldGrado, "", TEXTFIELD_GRADO);
            }
        });
        
        this.jTextFieldBuscar.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, TEXTFIELD_BUSCAR, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, "", TEXTFIELD_BUSCAR);
            }
        });
        
    }

    private void cargarDocentes() {
        String[] docentes = this.principal.obtenerDocentesPorDocumento();
        
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        modelo.addElement("Director de Curso");
        
        for(int i = 0 ; i < docentes.length; i++){
            modelo.addElement(docentes[i]);
        }
        
        this.jComboBoxDirectorCurso.setModel(modelo);
        
        DefaultComboBoxModel<String> modelo2 = new DefaultComboBoxModel<>();
        modelo2.addElement("Docente que dicta");
        
        for(int i = 0 ; i < docentes.length; i++){
            modelo2.addElement(docentes[i]);
        }
        
        this.jComboBoxDocenteDicta.setModel(modelo2);
    }

    private void cargarMateriasBase() {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        String[] materiasBase = this.principal.obtenerMateriasBase();
        
        if(materiasBase.length == 0){
            modelo.addElement("No hay Materias Registradas");
        }
        
        for(int i = 0 ; i < materiasBase.length; i++){
            modelo.addElement(materiasBase[i]);
        }
        
        this.jListMaterias.setModel(modelo);
        
    }

    private void agregarMateriasALista() {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        
        String[] materiasTemp = this.principal.obtenerMateriasTemp();
        
        for(int i = 0 ; i < materiasTemp.length; i++){
            modelo.addElement(materiasTemp[i]);
            
        }
        
        this.jListMateriasAgregar.setModel(modelo);
        
    }

    private void quitarMateriaAAgregar() {
        String materiaData[] = this.jListMateriasAgregar.getSelectedValue().split("-");
        String materia = materiaData[0];
        if(this.principal.eliminarMateriaTemporal(materia)){
            agregarMateriasALista();
        }
    }

    private void cargarListEventos() {
        this.jListMateriasAgregar.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                habilitarBoton(true);
            }
        });
        
    }

    private void habilitarBoton(boolean enable){
        this.jButtonQuitarMateria.setEnabled(enable);
    }

    @Override
    public Object cargarDatosPrincipales() {
        String[] columnas = {
                            "Curso",
                            "Grado",
                            "Director de Curso",
                            "Capacidad Máxima",
                            "Materias"
        };
        Object[][] objetos = this.principal.obtenerCursos(columnas.length);
        
        DefaultTableModel modelo = new DefaultTableModel(objetos, columnas);
        this.jTableCursos.setModel(modelo);
        
        //AGREGAR BOTON A LA CELDA DE VER MATERIAS POR CURSO
        TableColumnModel colModel = this.jTableCursos.getColumnModel();
        colModel.getColumn(4).setCellRenderer(new ButtonRenderer());
        colModel.getColumn(4).setCellEditor(new ButtonEditor(new JCheckBox()) {
            @Override
            public Object getCellEditorValue() {
                if (this.isIsPushed()) {
                    cargarMateriasDeCurso();
                }
                this.setIsPushed(false);
                return getLabel();
            }
        });
        colModel.getColumn(4).setMinWidth(100);
        
        return modelo;
    }
    
    public void cargarMateriasDeCurso(){
        int curso = Integer.parseInt(obtenerInformaciónCelda(jTableCursos, 0).toString());
        String materias = this.principal.obtenerMateriasDeCurso(curso);
        JOptionPane.showMessageDialog(null, materias, "Materias del curso " + curso, JOptionPane.PLAIN_MESSAGE);
    }

    @Override
    public void agregarItemsAMenu() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
