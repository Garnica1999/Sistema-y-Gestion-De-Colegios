/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.paneles.directivo;

import vista.interfaces.IConstanteComponentes;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import vista.Principal;
import vista.paneles.PanelComponents;

/**
 *
 * @author Carlos
 */
@SuppressWarnings("serial")
public class PanelPersonas extends PanelComponents implements IConstanteComponentes{
    private final Principal principal;
    private Timer timerBuscar;
    
    private JMenuItem jMenuitemEliminar;
    /**
     * Creates new form PanelPersonas
     */
    public PanelPersonas(Principal principal) {
        initComponents();
        this.principal = principal;
        iniciarItemsPopMenu(jTablePersonas, jPopupMenuLista);
        agregarTextosDefecto();
        agregarPlaceHolder();
        cargarDatosFecha();
        cargarDepartamentos();
        cargarCursos();
        cargarEPS();
        cargarPersonasTabla();
        
        modificarTabla();
        try{
            agregarFocusBorder(jPanelBuscar, jPanelPersonas, jPanelRegistro);
            modificarTemaComboBox(jPanelPersonas, jPanelRegistro);
            cambiarEstiloTabbePane(jTabbedPanePersonas);
        }catch(IllegalArgumentException ex){
            Logger.getLogger(PanelPersonas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.iniciarTimerBuscar(jTablePersonas, jTextFieldBuscar, timerBuscar);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupPersonas = new javax.swing.ButtonGroup();
        jPopupMenuLista = new javax.swing.JPopupMenu();
        jTabbedPanePersonas = new javax.swing.JTabbedPane();
        jPanelPersonas = new javax.swing.JPanel();
        jComboBoxPersonas = new javax.swing.JComboBox<>();
        jPanelBuscar = new javax.swing.JPanel();
        jLabelBuscar = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonas = new javax.swing.JTable();
        jPanelRegistro = new javax.swing.JPanel();
        jTextFieldTelefono = new javax.swing.JTextField();
        jTextFieldDocumento = new javax.swing.JTextField();
        jTextFieldPrimerNombre = new javax.swing.JTextField();
        jTextFieldSegundoApellido = new javax.swing.JTextField();
        jTextFieldSegundoNombre = new javax.swing.JTextField();
        jComboBoxTipoDocumento = new javax.swing.JComboBox<>();
        jTextFieldPrimerApellido = new javax.swing.JTextField();
        jTextFieldEdad = new javax.swing.JTextField();
        jComboBoxGenero = new javax.swing.JComboBox<>();
        jRadioButtonDirectivo = new javax.swing.JRadioButton();
        jComboBoxEstEPS = new javax.swing.JComboBox<>();
        jRadioButtonPersonalServicio = new javax.swing.JRadioButton();
        jComboBoxEstRH = new javax.swing.JComboBox<>();
        jLabelTituloTPersona = new javax.swing.JLabel();
        jTextFieldEstCodigo = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelTituloNacimiento = new javax.swing.JLabel();
        jComboBoxEstDia = new javax.swing.JComboBox<>();
        jComboBoxEstMes = new javax.swing.JComboBox<>();
        jComboBoxEstAnio = new javax.swing.JComboBox<>();
        jTextFieldEstBarrio = new javax.swing.JTextField();
        jLabelTituloResidencia = new javax.swing.JLabel();
        jTextFieldEstDireccion = new javax.swing.JTextField();
        jTextFieldEstLocalidad = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jComboBoxAcuParentezco = new javax.swing.JComboBox<>();
        jTextFieldNumContrato = new javax.swing.JTextField();
        jComboBoxCargo = new javax.swing.JComboBox<>();
        jComboBoxDepartamento = new javax.swing.JComboBox<>();
        jRadioButtonEstudiante = new javax.swing.JRadioButton();
        jTextFieldSalario = new javax.swing.JTextField();
        jRadioButtonAcudiente = new javax.swing.JRadioButton();
        jRadioButtonDocente = new javax.swing.JRadioButton();
        jLabelTituloNacimiento1 = new javax.swing.JLabel();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jLabelTituloResidencia1 = new javax.swing.JLabel();
        jComboBoxEstCurso = new javax.swing.JComboBox<>();
        jButtonAcudientesEst = new javax.swing.JButton();
        jTextFieldUsuario = new javax.swing.JTextField();
        jPasswordFieldClave = new javax.swing.JPasswordField();

        jPopupMenuLista.setBackground(new java.awt.Color(255, 255, 255));

        setBackground(new java.awt.Color(88, 165, 240));

        jTabbedPanePersonas.setBackground(new java.awt.Color(88, 165, 240));
        jTabbedPanePersonas.setForeground(new java.awt.Color(255, 255, 255));

        jPanelPersonas.setBackground(new java.awt.Color(255, 255, 255));

        jComboBoxPersonas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxPersonas.setForeground(new java.awt.Color(88, 88, 88));
        jComboBoxPersonas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo de Persona", "Estudiante", "Acudiente", "Docente", "Directivo", "Personal de Servicio" }));
        jComboBoxPersonas.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPersonasActionPerformed(evt);
            }
        });

        jPanelBuscar.setBackground(new java.awt.Color(255, 255, 255));

        jLabelBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/busqueda/search.png"))); // NOI18N

        jTextFieldBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldBuscar.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldBuscar.setText("Buscar");
        jTextFieldBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelBuscarLayout = new javax.swing.GroupLayout(jPanelBuscar);
        jPanelBuscar.setLayout(jPanelBuscarLayout);
        jPanelBuscarLayout.setHorizontalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelBuscarLayout.setVerticalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldBuscar)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(null);

        jTablePersonas.setAutoCreateRowSorter(true);
        jTablePersonas.setForeground(new java.awt.Color(110, 110, 110));
        jTablePersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablePersonas.setGridColor(new java.awt.Color(204, 204, 204));
        jTablePersonas.setSelectionBackground(new java.awt.Color(88, 165, 240));
        jScrollPane1.setViewportView(jTablePersonas);

        javax.swing.GroupLayout jPanelPersonasLayout = new javax.swing.GroupLayout(jPanelPersonas);
        jPanelPersonas.setLayout(jPanelPersonasLayout);
        jPanelPersonasLayout.setHorizontalGroup(
            jPanelPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPersonasLayout.createSequentialGroup()
                .addContainerGap(329, Short.MAX_VALUE)
                .addGroup(jPanelPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxPersonas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(321, 321, 321))
            .addGroup(jPanelPersonasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanelPersonasLayout.setVerticalGroup(
            jPanelPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPanePersonas.addTab("Ver", jPanelPersonas);

        jPanelRegistro.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldTelefono.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldTelefono.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldTelefono.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldDocumento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldDocumento.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldDocumento.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldPrimerNombre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldPrimerNombre.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldPrimerNombre.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldSegundoApellido.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldSegundoApellido.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldSegundoApellido.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldSegundoNombre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldSegundoNombre.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldSegundoNombre.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jComboBoxTipoDocumento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxTipoDocumento.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxTipoDocumento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo de Documento", "Documento de Indentidad", "Cedula de Ciudadanía", "Registro Civil", "Cedula Extranjera", "Pasaporte" }));
        jComboBoxTipoDocumento.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldPrimerApellido.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldPrimerApellido.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldPrimerApellido.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jTextFieldEdad.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldEdad.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldEdad.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jComboBoxGenero.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxGenero.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Genero", "Masculino", "Femenino" }));
        jComboBoxGenero.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jRadioButtonDirectivo.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupPersonas.add(jRadioButtonDirectivo);
        jRadioButtonDirectivo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jRadioButtonDirectivo.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButtonDirectivo.setText("Directivo");
        jRadioButtonDirectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDirectivoActionPerformed(evt);
            }
        });

        jComboBoxEstEPS.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBoxEstEPS.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxEstEPS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EPS", "Famisanar" }));
        jComboBoxEstEPS.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxEstEPS.setEnabled(false);

        jRadioButtonPersonalServicio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupPersonas.add(jRadioButtonPersonalServicio);
        jRadioButtonPersonalServicio.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jRadioButtonPersonalServicio.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButtonPersonalServicio.setText("Trabajador");
        jRadioButtonPersonalServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPersonalServicioActionPerformed(evt);
            }
        });

        jComboBoxEstRH.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBoxEstRH.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxEstRH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RH", "A+", "A-", "AB+", "AB-", "O+", "O-", "B+", "B-" }));
        jComboBoxEstRH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxEstRH.setEnabled(false);

        jLabelTituloTPersona.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTituloTPersona.setForeground(new java.awt.Color(102, 102, 102));
        jLabelTituloTPersona.setText("Tipo de Persona");

        jTextFieldEstCodigo.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jTextFieldEstCodigo.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldEstCodigo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jTextFieldEstCodigo.setEnabled(false);

        jSeparator1.setForeground(new java.awt.Color(153, 153, 153));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabelTituloNacimiento.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelTituloNacimiento.setForeground(new java.awt.Color(102, 102, 102));
        jLabelTituloNacimiento.setText("Nacimiento");

        jComboBoxEstDia.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBoxEstDia.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxEstDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dia" }));
        jComboBoxEstDia.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxEstDia.setEnabled(false);

        jComboBoxEstMes.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBoxEstMes.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxEstMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mes", "Enero", "Febrero", "Mazo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        jComboBoxEstMes.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxEstMes.setEnabled(false);

        jComboBoxEstAnio.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBoxEstAnio.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxEstAnio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Año" }));
        jComboBoxEstAnio.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxEstAnio.setEnabled(false);

        jTextFieldEstBarrio.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jTextFieldEstBarrio.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldEstBarrio.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jTextFieldEstBarrio.setEnabled(false);

        jLabelTituloResidencia.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelTituloResidencia.setForeground(new java.awt.Color(102, 102, 102));
        jLabelTituloResidencia.setText("Residencia");

        jTextFieldEstDireccion.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jTextFieldEstDireccion.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldEstDireccion.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jTextFieldEstDireccion.setEnabled(false);

        jTextFieldEstLocalidad.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jTextFieldEstLocalidad.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldEstLocalidad.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jTextFieldEstLocalidad.setEnabled(false);

        jSeparator2.setForeground(new java.awt.Color(153, 153, 153));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jComboBoxAcuParentezco.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBoxAcuParentezco.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxAcuParentezco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Parentezco", "Padre", "Madre", "Hermano/a", "Tio/a", "Abuelo/a", "Otro", " ", " " }));
        jComboBoxAcuParentezco.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxAcuParentezco.setEnabled(false);

        jTextFieldNumContrato.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jTextFieldNumContrato.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldNumContrato.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jTextFieldNumContrato.setEnabled(false);

        jComboBoxCargo.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBoxCargo.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cargo", "Trabajador de Planta", "Trabajador por Horas", " " }));
        jComboBoxCargo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxCargo.setEnabled(false);

        jComboBoxDepartamento.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBoxDepartamento.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxDepartamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Departamento" }));
        jComboBoxDepartamento.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxDepartamento.setEnabled(false);

        jRadioButtonEstudiante.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupPersonas.add(jRadioButtonEstudiante);
        jRadioButtonEstudiante.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jRadioButtonEstudiante.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButtonEstudiante.setText("Estudiante");
        jRadioButtonEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEstudianteActionPerformed(evt);
            }
        });

        jTextFieldSalario.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jTextFieldSalario.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldSalario.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jTextFieldSalario.setEnabled(false);

        jRadioButtonAcudiente.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupPersonas.add(jRadioButtonAcudiente);
        jRadioButtonAcudiente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jRadioButtonAcudiente.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButtonAcudiente.setText("Acudiente");
        jRadioButtonAcudiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAcudienteActionPerformed(evt);
            }
        });

        jRadioButtonDocente.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupPersonas.add(jRadioButtonDocente);
        jRadioButtonDocente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jRadioButtonDocente.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButtonDocente.setText("Docente");
        jRadioButtonDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDocenteActionPerformed(evt);
            }
        });

        jLabelTituloNacimiento1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelTituloNacimiento1.setForeground(new java.awt.Color(102, 102, 102));
        jLabelTituloNacimiento1.setText("Salud");

        jButtonRegistrar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonRegistrar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.setToolTipText("");
        jButtonRegistrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonLimpiar.setForeground(new java.awt.Color(88, 165, 240));
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.setToolTipText("");
        jButtonLimpiar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240), 2));
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jLabelTituloResidencia1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelTituloResidencia1.setForeground(new java.awt.Color(102, 102, 102));
        jLabelTituloResidencia1.setText("Principal");

        jComboBoxEstCurso.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBoxEstCurso.setForeground(new java.awt.Color(102, 102, 102));
        jComboBoxEstCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Curso" }));
        jComboBoxEstCurso.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jComboBoxEstCurso.setEnabled(false);

        jButtonAcudientesEst.setBackground(new java.awt.Color(255, 255, 255));
        jButtonAcudientesEst.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jButtonAcudientesEst.setForeground(new java.awt.Color(88, 165, 240));
        jButtonAcudientesEst.setText("Agregar Acudientes");
        jButtonAcudientesEst.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 165, 240)));
        jButtonAcudientesEst.setEnabled(false);
        jButtonAcudientesEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcudientesEstActionPerformed(evt);
            }
        });

        jTextFieldUsuario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldUsuario.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldUsuario.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        jPasswordFieldClave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPasswordFieldClave.setForeground(new java.awt.Color(102, 102, 102));
        jPasswordFieldClave.setText("clave");
        jPasswordFieldClave.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout jPanelRegistroLayout = new javax.swing.GroupLayout(jPanelRegistro);
        jPanelRegistro.setLayout(jPanelRegistroLayout);
        jPanelRegistroLayout.setHorizontalGroup(
            jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextFieldPrimerNombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDocumento, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxTipoDocumento, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldSegundoNombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordFieldClave, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(36, 36, 36)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextFieldSegundoApellido)
                        .addComponent(jTextFieldEdad)
                        .addComponent(jComboBoxGenero, 0, 447, Short.MAX_VALUE)
                        .addComponent(jTextFieldPrimerApellido))
                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addGap(332, 332, 332)
                .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRegistroLayout.createSequentialGroup()
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonEstudiante)
                            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelTituloResidencia1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxEstCurso, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonAcudientesEst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldEstCodigo)
                                    .addComponent(jComboBoxEstEPS, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelTituloNacimiento1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldEstBarrio)
                                    .addComponent(jTextFieldEstDireccion)
                                    .addComponent(jTextFieldEstLocalidad)
                                    .addComponent(jLabelTituloResidencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxEstRH, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBoxEstAnio, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxEstMes, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxEstDia, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelTituloNacimiento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxAcuParentezco, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonAcudiente, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistroLayout.createSequentialGroup()
                                .addComponent(jRadioButtonDocente)
                                .addGap(67, 67, 67))
                            .addComponent(jComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNumContrato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldSalario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jRadioButtonDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButtonPersonalServicio)))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addComponent(jLabelTituloTPersona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelRegistroLayout.setVerticalGroup(
            jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrimerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSegundoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordFieldClave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabelTituloTPersona)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRegistroLayout.createSequentialGroup()
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRadioButtonDirectivo)
                                        .addComponent(jRadioButtonPersonalServicio))
                                    .addComponent(jRadioButtonAcudiente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelRegistroLayout.createSequentialGroup()
                                        .addComponent(jTextFieldNumContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(jTextFieldSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jComboBoxAcuParentezco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSeparator2)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelRegistroLayout.createSequentialGroup()
                                .addComponent(jRadioButtonEstudiante)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelTituloResidencia)
                                    .addComponent(jLabelTituloResidencia1)
                                    .addComponent(jLabelTituloNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldEstCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldEstBarrio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxEstDia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldEstDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxEstCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxEstMes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldEstLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonAcudientesEst, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxEstAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelTituloNacimiento1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxEstEPS, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxEstRH, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(28, 28, 28)
                        .addGroup(jPanelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelRegistroLayout.createSequentialGroup()
                        .addComponent(jRadioButtonDocente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jComboBoxDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPanePersonas.addTab("Registro", jPanelRegistro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanePersonas)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanePersonas, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        registrar();
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jRadioButtonEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEstudianteActionPerformed
        activarControlesEstudiante(true);
        activarControlesAcudiente(false);
        activarControlesTrabajadores(false);
    }//GEN-LAST:event_jRadioButtonEstudianteActionPerformed

    private void jRadioButtonAcudienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAcudienteActionPerformed
        activarControlesEstudiante(false);
        activarControlesAcudiente(true);
        activarControlesTrabajadores(false);

    }//GEN-LAST:event_jRadioButtonAcudienteActionPerformed

    private void jRadioButtonDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDocenteActionPerformed
        activarControlesEstudiante(false);
        activarControlesAcudiente(false);
        activarControlesTrabajadores(true);

    }//GEN-LAST:event_jRadioButtonDocenteActionPerformed

    private void jRadioButtonDirectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDirectivoActionPerformed
        activarControlesEstudiante(false);
        activarControlesAcudiente(false);
        activarControlesTrabajadores(true);
    }//GEN-LAST:event_jRadioButtonDirectivoActionPerformed

    private void jRadioButtonPersonalServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPersonalServicioActionPerformed
        activarControlesEstudiante(false);
        activarControlesAcudiente(false);
        activarControlesTrabajadores(true);
    }//GEN-LAST:event_jRadioButtonPersonalServicioActionPerformed

    private void jComboBoxPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPersonasActionPerformed
        cargarPersonas();
    }//GEN-LAST:event_jComboBoxPersonasActionPerformed

    private void jButtonAcudientesEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcudientesEstActionPerformed
        agregarAcudientes();
    }//GEN-LAST:event_jButtonAcudientesEstActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupPersonas;
    private javax.swing.JButton jButtonAcudientesEst;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JComboBox<String> jComboBoxAcuParentezco;
    private javax.swing.JComboBox<String> jComboBoxCargo;
    private javax.swing.JComboBox<String> jComboBoxDepartamento;
    private javax.swing.JComboBox<String> jComboBoxEstAnio;
    private javax.swing.JComboBox<String> jComboBoxEstCurso;
    private javax.swing.JComboBox<String> jComboBoxEstDia;
    private javax.swing.JComboBox<String> jComboBoxEstEPS;
    private javax.swing.JComboBox<String> jComboBoxEstMes;
    private javax.swing.JComboBox<String> jComboBoxEstRH;
    private javax.swing.JComboBox<String> jComboBoxGenero;
    private javax.swing.JComboBox<String> jComboBoxPersonas;
    private javax.swing.JComboBox<String> jComboBoxTipoDocumento;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JLabel jLabelTituloNacimiento;
    private javax.swing.JLabel jLabelTituloNacimiento1;
    private javax.swing.JLabel jLabelTituloResidencia;
    private javax.swing.JLabel jLabelTituloResidencia1;
    private javax.swing.JLabel jLabelTituloTPersona;
    private javax.swing.JPanel jPanelBuscar;
    private javax.swing.JPanel jPanelPersonas;
    private javax.swing.JPanel jPanelRegistro;
    private javax.swing.JPasswordField jPasswordFieldClave;
    private javax.swing.JPopupMenu jPopupMenuLista;
    private javax.swing.JRadioButton jRadioButtonAcudiente;
    private javax.swing.JRadioButton jRadioButtonDirectivo;
    private javax.swing.JRadioButton jRadioButtonDocente;
    private javax.swing.JRadioButton jRadioButtonEstudiante;
    private javax.swing.JRadioButton jRadioButtonPersonalServicio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPanePersonas;
    private javax.swing.JTable jTablePersonas;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldDocumento;
    private javax.swing.JTextField jTextFieldEdad;
    private javax.swing.JTextField jTextFieldEstBarrio;
    private javax.swing.JTextField jTextFieldEstCodigo;
    private javax.swing.JTextField jTextFieldEstDireccion;
    private javax.swing.JTextField jTextFieldEstLocalidad;
    private javax.swing.JTextField jTextFieldNumContrato;
    private javax.swing.JTextField jTextFieldPrimerApellido;
    private javax.swing.JTextField jTextFieldPrimerNombre;
    private javax.swing.JTextField jTextFieldSalario;
    private javax.swing.JTextField jTextFieldSegundoApellido;
    private javax.swing.JTextField jTextFieldSegundoNombre;
    private javax.swing.JTextField jTextFieldTelefono;
    private javax.swing.JTextField jTextFieldUsuario;
    // End of variables declaration//GEN-END:variables

    @Override
    public void agregarPlaceHolder() {
        this.jTextFieldDocumento.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldDocumento, TEXTFIELD_DOCUMENTO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldDocumento, "", TEXTFIELD_DOCUMENTO);
            }
        });
        
        this.jTextFieldEdad.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldEdad, TEXTFIELD_EDAD, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldEdad, "", TEXTFIELD_EDAD);            
            }
        });
        
        this.jTextFieldEstBarrio.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldEstBarrio, TEXTFIELD_BARRIO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldEstBarrio, "", TEXTFIELD_BARRIO);
            }
        });
        
        this.jTextFieldEstCodigo.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldEstCodigo, TEXTFIELD_CODIGO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldEstCodigo, "", TEXTFIELD_CODIGO);
            }
        });
        
        this.jTextFieldEstDireccion.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldEstDireccion, TEXTFIELD_DIRECCION, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldEstDireccion, "", TEXTFIELD_DIRECCION);
            }
        });
        
        this.jTextFieldEstLocalidad.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldEstLocalidad, TEXTFIELD_LOCALIDAD, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldEstLocalidad, "", TEXTFIELD_LOCALIDAD);
            }
        });
        
        this.jTextFieldNumContrato.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldNumContrato, TEXTFIELD_CONTRATO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldNumContrato, "", TEXTFIELD_CONTRATO);
            }
        });
        
        this.jTextFieldPrimerApellido.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldPrimerApellido, TEXTFIELD_PRIMER_APELLIDO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldPrimerApellido, "", TEXTFIELD_PRIMER_APELLIDO);
            }
        });
        
        this.jTextFieldPrimerNombre.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldPrimerNombre, TEXTFIELD_PRIMER_NOMBRE, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldPrimerNombre, "", TEXTFIELD_PRIMER_NOMBRE);
            }
        });
        
        this.jTextFieldSalario.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldSalario, TEXTFIELD_SALARIO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldSalario, "", TEXTFIELD_SALARIO);
            }
        });
        
        this.jTextFieldSegundoApellido.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldSegundoApellido, TEXTFIELD_SEGUNDO_APELLIDO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldSegundoApellido, "", TEXTFIELD_SEGUNDO_APELLIDO);
            }
        });
        
        this.jTextFieldSegundoNombre.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldSegundoNombre, TEXTFIELD_SEGUNDO_NOMBRE, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldSegundoNombre, "", TEXTFIELD_SEGUNDO_NOMBRE);
            }
        });
        
        this.jTextFieldTelefono.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldTelefono, TEXTFIELD_TELEFONO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldTelefono, "", TEXTFIELD_TELEFONO);
            }
        });
        
        this.jTextFieldUsuario.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldUsuario, TEXTFIELD_USUARIO, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldUsuario, "", TEXTFIELD_USUARIO);
            }
        });
        
        this.jPasswordFieldClave.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jPasswordFieldClave, PASSWORDFIELD_CLAVE, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jPasswordFieldClave, "", PASSWORDFIELD_CLAVE);
            }
        });
        
        this.jTextFieldBuscar.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, TEXTFIELD_BUSCAR, "");
            }

            @Override
            public void focusLost(FocusEvent e) {
                addPlaceHolder(jTextFieldBuscar, "", TEXTFIELD_BUSCAR);
            }
        });
        
    }

    @Override
    public void agregarTextosDefecto() {
        this.jTextFieldDocumento.setText(TEXTFIELD_DOCUMENTO);
        this.jTextFieldEdad.setText(TEXTFIELD_EDAD);
        this.jTextFieldEstBarrio.setText(TEXTFIELD_BARRIO);
        this.jTextFieldEstCodigo.setText(TEXTFIELD_CODIGO);
        this.jTextFieldEstDireccion.setText(TEXTFIELD_DIRECCION);
        this.jTextFieldEstLocalidad.setText(TEXTFIELD_LOCALIDAD);
        this.jTextFieldNumContrato.setText(TEXTFIELD_CONTRATO);
        this.jTextFieldPrimerApellido.setText(TEXTFIELD_PRIMER_APELLIDO);
        this.jTextFieldPrimerNombre.setText(TEXTFIELD_PRIMER_NOMBRE);
        this.jTextFieldSalario.setText(TEXTFIELD_SALARIO);
        this.jTextFieldSegundoApellido.setText(TEXTFIELD_SEGUNDO_APELLIDO);
        this.jTextFieldSegundoNombre.setText(TEXTFIELD_SEGUNDO_NOMBRE);
        this.jTextFieldTelefono.setText(TEXTFIELD_TELEFONO);
        this.jTextFieldUsuario.setText(TEXTFIELD_USUARIO);
        this.jPasswordFieldClave.setText(PASSWORDFIELD_CLAVE);
        
    }

    @Override
    public void registrar() {
        if (!buscar()) {
            if (validar()) {
                JOptionPane.showMessageDialog(null, "Se ha agregado la persona correctamente", "Personas", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    @Override
    public boolean validar() {
        try{
            if(this.jTextFieldDocumento.getText().equals(""))   
                return false;
            
            if(this.jTextFieldEdad.getText().equals(""))    
                return false;
            
            if (this.jTextFieldPrimerApellido.getText().equals("")) 
                return false;
            
            if(this.jTextFieldPrimerNombre.getText().equals(""))    
                return false;
            
            if(this.jTextFieldSegundoApellido.getText().equals("")) 
                return false;
            
            if(this.jTextFieldSegundoNombre.getText().equals(""))   
                return false;
            
            if(this.jTextFieldTelefono.getText().equals(""))    
                return false;
            
            if(this.jTextFieldUsuario.getText().equals(""))     
                return false;
            
            if(new String(this.jPasswordFieldClave.getPassword()).equals(""))
                return false;
            
            //CREAR PERSONA
            long documento = Long.parseLong(this.jTextFieldDocumento.getText());
            String tipo_documento = (String)this.jComboBoxTipoDocumento.getSelectedItem();
            String primer_nombre = this.jTextFieldPrimerNombre.getText();
            String segundo_nombre = this.jTextFieldSegundoNombre.getText();
            String primer_apellido = this.jTextFieldPrimerApellido.getText();
            String segundo_apellido = this.jTextFieldSegundoApellido.getText();
            int edad = Integer.parseInt(this.jTextFieldEdad.getText());
            char genero;
            if(this.jComboBoxGenero.getSelectedIndex() == 1){
                genero = 'M';
            }else{
                genero = 'F';
            }
            long telefono = Long.parseLong(this.jTextFieldTelefono.getText());
            String usuario = "";
            String clave = "";
            
            if(this.jRadioButtonAcudiente.isSelected()){
                //Crear acudiente
                String Parentesco = (String)this.jComboBoxAcuParentezco.getSelectedItem();
                return crearAcudiente(Parentesco, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, usuario, clave);
            }else if(this.jRadioButtonDirectivo.isSelected() || 
                    this.jRadioButtonDocente.isSelected() || 
                    this.jRadioButtonPersonalServicio.isSelected()){
                //Crear Directivo, Docente o personal de Servicio
                
                int numero_contrato = Integer.parseInt(this.jTextFieldNumContrato.getText());
                double salario = Double.parseDouble(this.jTextFieldSalario.getText());
                String nombreDpto = (String)this.jComboBoxDepartamento.getSelectedItem();
                String cargo = (String)this.jComboBoxCargo.getSelectedItem();
                if(this.obtenerTrabajadorPorContrato(numero_contrato)){
                    JOptionPane.showMessageDialog(null,"El numero de contrato a agregar está registrado.","Personas", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                if(this.jRadioButtonDirectivo.isSelected()){
                    return crearDirectivo(numero_contrato, salario, cargo, nombreDpto, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, usuario, clave);
                } else if(this.jRadioButtonDocente.isSelected()){
                    return crearDocente(numero_contrato, salario, cargo, nombreDpto, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, usuario, clave);
                } else if(this.jRadioButtonPersonalServicio.isSelected()){
                    return crearPersonalServicio(numero_contrato, salario, cargo, nombreDpto, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, usuario, clave);
                }
            
            }else if (this.jRadioButtonEstudiante.isSelected()){
                    int codigo = Integer.parseInt(this.jTextFieldEstCodigo.getText());
                    if(this.principal.obtenerCantAcudientesTemp() == 0){
                        return false;
                    } else if (this.jComboBoxEstCurso.getSelectedIndex() == 0){
                        return false;
                    } else if (this.existeEstudiantePorCodigo(codigo)){
                        return false;
                    }
                    int dia = Integer.parseInt((String)this.jComboBoxEstDia.getSelectedItem());
                    int mes = this.jComboBoxEstMes.getSelectedIndex();
                    int anio = Integer.parseInt((String)this.jComboBoxEstAnio.getSelectedItem());
                    String barrio = this.jTextFieldEstBarrio.getText();
                    String localidad = this.jTextFieldEstLocalidad.getText();
                    String direccion = this.jTextFieldEstDireccion.getText();
                    String nombreEPS = (String)this.jComboBoxEstEPS.getSelectedItem();
                    String rh = (String)this.jComboBoxEstRH.getSelectedItem();
                    int numCurso = Integer.parseInt((String)this.jComboBoxEstCurso.getSelectedItem());
                    return agregarEstudiante(codigo, dia, mes, anio, barrio, localidad, direccion, nombreEPS, rh, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, numCurso, usuario, clave);
            }
            return false;
        }catch(NullPointerException | NumberFormatException | IndexOutOfBoundsException ex){
            System.out.println(ex.toString());
            return false;
        }
    }

    private boolean crearAcudiente(String Parentesco, long documento, String tipo_documento, String primer_nombre, String segundo_nombre, String primer_apellido, String segundo_apellido, int edad, char genero, long telefono, String usuario, String clave) {
        return this.principal.crearAcudiente(Parentesco, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, usuario, clave);
    }

    private boolean crearDirectivo(int numero_contrato, double salario, String cargo, String nombreDpto, long documento, String tipo_documento, String primer_nombre, String segundo_nombre, String primer_apellido, String segundo_apellido, int edad, char genero, long telefono, String usuario, String clave) {
        return this.principal.agregarDirectivo(numero_contrato, salario, cargo, nombreDpto, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, usuario, clave);
    }

    private boolean crearDocente(int numero_contrato, double salario, String cargo, String nombreDpto, long documento, String tipo_documento, String primer_nombre, String segundo_nombre, String primer_apellido, String segundo_apellido, int edad, char genero, long telefono, String usuario, String clave) {
        return this.principal.crearDocente(numero_contrato, salario, cargo, nombreDpto, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, usuario, clave);
    }

    private boolean crearPersonalServicio(int numero_contrato, double salario, String cargo, String nombreDpto, long documento, String tipo_documento, String primer_nombre, String segundo_nombre, String primer_apellido, String segundo_apellido, int edad, char genero, long telefono, String usuario, String clave) {
        return this.principal.crearPersonalServicio(numero_contrato, salario, cargo, nombreDpto, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, usuario, clave);
    }

    private boolean agregarEstudiante(int codigo, int dia, int mes, int anio, String barrio, String localidad, String direccion, String nombreEPS, String rh, long documento, String tipo_documento, String primer_nombre, String segundo_nombre, String primer_apellido, String segundo_apellido, int edad, char genero, long telefono, int numCurso, String usuario, String clave) {
        return this.principal.crearEstudiante(codigo, dia, mes, anio, barrio, localidad, direccion, nombreEPS, rh, documento, tipo_documento, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, edad, genero, telefono, numCurso, usuario, clave);
    }

    private void activarControlesEstudiante(boolean enable) {
        this.jTextFieldEstBarrio.setEnabled(enable);
        this.jTextFieldEstCodigo.setEnabled(enable);
        this.jTextFieldEstDireccion.setEnabled(enable);
        this.jTextFieldEstLocalidad.setEnabled(enable);
        this.jComboBoxEstAnio.setEnabled(enable);
        this.jComboBoxEstDia.setEnabled(enable);
        this.jComboBoxEstEPS.setEnabled(enable);
        this.jComboBoxEstMes.setEnabled(enable);
        this.jComboBoxEstRH.setEnabled(enable);    
        this.jButtonAcudientesEst.setEnabled(enable);
        this.jComboBoxEstCurso.setEnabled(enable);
    }

    private void activarControlesAcudiente(boolean enable) {
        this.jComboBoxAcuParentezco.setEnabled(enable);
    }

    private void activarControlesTrabajadores(boolean enable) {
        this.jTextFieldNumContrato.setEnabled(enable); 
        this.jTextFieldSalario.setEnabled(enable); 
        this.jComboBoxDepartamento.setEnabled(enable); 
        this.jComboBoxCargo.setEnabled(enable); 
    }

    private void cargarDatosFecha() {
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        modelo.addElement("Dia");
        for(int i = 1 ; i <=31; i++){
            modelo.addElement(i+"");
        }
        this.jComboBoxEstDia.setModel(modelo);
        
        modelo = new DefaultComboBoxModel<>();
        
        modelo.addElement("Año");
        Calendar c = new GregorianCalendar();
        
        for(int i = c.get(Calendar.YEAR);i >=1900; i--){
            modelo.addElement(i+"");
        }
        this.jComboBoxEstAnio.setModel(modelo);
    }

    private void cargarPersonas() {
        /*
            Tipo de Persona
            Estudiante
            Acudiente
            Docente
            Directivo
            Personal de Servicio
        */
        DefaultTableModel modelo = null;
        switch(this.jComboBoxPersonas.getSelectedIndex()){
            case 0:
                //CARGAR TODO
                modelo = (DefaultTableModel) cargarDatosPrincipales();
                this.jTablePersonas.setModel(modelo);
                modificarAnchoColumnasPersonas();
                break;
            case 1:
                modelo = cargarEstudiantes();
                this.jTablePersonas.setModel(modelo);
                modificarAnchoColumnasEstudiantes();
                break;
            case 2:
                modelo = cargarAcudientes();
                this.jTablePersonas.setModel(modelo);
                modificarAnchoColumnasAcudientes();
                break;
            case 3:
                modelo = cargarDocentes();
                this.jTablePersonas.setModel(modelo);
                modificarAnchoColumnasTrabajadores();
                break;
            case 4:
                modelo = cargarDirectivo();
                this.jTablePersonas.setModel(modelo);
                modificarAnchoColumnasTrabajadores();
                break;
            case 5:
                modelo = cargarPersonalServicio();
                this.jTablePersonas.setModel(modelo);
                modificarAnchoColumnasTrabajadores();
                break;
        }
        
    }

    @Override
    public Object cargarDatosPrincipales() {
        String[] columnas = {
            "Documento",
            "Tipo de Documento",
            "Nombres",
            "Apellidos",
            "Edad",
            "Genero",
            "Telefono",
            "Tipo de Persona"
        };
        String[][] personas = this.principal.obtenerPersonasRegistradas(columnas.length);
        return new DefaultTableModel(personas, columnas);
    }

    private DefaultTableModel cargarEstudiantes() {
        
        String[] columnas = {"Codigo",
                            "Tipo de Documento",
                            "Documento",
                            "Nombres",
                            "Apellidos",
                            "Curso",
                            "Edad",
                            "Genero",
                            "Telefono",
                            "Estado de Inscripción",
                            "Ruta",
        };
        String[][] estudiantes = this.principal.obtenerEstudiantesPorCodigo(columnas.length);
        return new DefaultTableModel(estudiantes, columnas);
    }

    private void cargarDepartamentos() {
        String departamentos[] = this.principal.cargarDepartamentos();
        
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        modelo.addElement("Departamento");
        
        for(int i = 0 ; i < departamentos.length; i++){
            modelo.addElement(departamentos[i]);
        }
        
        this.jComboBoxDepartamento.setModel(modelo);
    }

    private void agregarAcudientes() {
        this.principal.irAAgregarAcudientes();
    }

    private void cargarCursos() {
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        String[] cursos = this.principal.obtenerCursos();
        modelo.addElement("Curso");
        for(int i = 0 ; i < cursos.length; i++){
            modelo.addElement(cursos[i]);
        }
        
        this.jComboBoxEstCurso.setModel(modelo);
    }

    private DefaultTableModel cargarPersonalServicio() {
        String[] columnas = {"Contrato N°",
                            "Tipo de Documento",
                            "Documento",
                            "Nombres",
                            "Apellidos",
                            "Edad",
                            "Genero",
                            "Telefono",};

        String[][] acudientes = this.principal.obtenerPersonalServicio(columnas.length);
        return new DefaultTableModel(acudientes, columnas);
    }

    private DefaultTableModel cargarDirectivo() {
        String[] columnas = {"Contrato N°",
                            "Tipo de Documento",
                            "Documento",
                            "Nombres",
                            "Apellidos",
                            "Edad",
                            "Genero",
                            "Telefono",
        };
        
        String[][] acudientes = this.principal.obtenerDirectivos(columnas.length);
        return new DefaultTableModel(acudientes, columnas);
    }

    private DefaultTableModel cargarDocentes() {
        String[] columnas = {"Contrato N°",
                            "Tipo de Documento",
                            "Documento",
                            "Nombres",
                            "Apellidos",
                            "Edad",
                            "Genero",
                            "Telefono",
        };
        
        String[][] acudientes = this.principal.obtenerDocentes(columnas.length);
        return new DefaultTableModel(acudientes, columnas);
    }

    private DefaultTableModel cargarAcudientes() {
        String[] columnas = {"Id",
                            "Tipo de Documento",
                            "Documento",
                            "Nombres",
                            "Apellidos",
                            "Parentezco",
                            "Edad",
                            "Genero",
                            "Telefono",
        };
        
        String[][] acudientes = this.principal.obtenerAcudientes(columnas.length);
        return new DefaultTableModel(acudientes, columnas);
    }
    
    private void eliminarPersona(){
        /*
            Tipo de Persona
            Estudiante
            Acudiente
            Docente
            Directivo
            Personal de Servicio
        */
        boolean eliminado = false;
        switch(this.jComboBoxPersonas.getSelectedIndex()){
            case 1:
                eliminado = eliminarEstudiante();
                break;
            case 2:
                eliminado = eliminarAcudiente();
                break;
            case 3:
                eliminado = eliminarDocente();
                break;
            case 4:
                eliminado = eliminarDirectivo();
                break;
            case 5:
                eliminado = eliminarPersonal();
                break;
        }
        if(eliminado){
            this.cargarPersonas();
        }
    }

    private boolean eliminarEstudiante() {
        
        int codigo = Integer.parseInt(obtenerInformaciónCelda(jTablePersonas, 0).toString());
        if (this.principal.eliminarEstudiante(codigo)) {
            JOptionPane.showMessageDialog(null, "Se ha eliminado el estudiante correctamente", "Personas", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        
        return true;
    }

    private boolean eliminarAcudiente() {
        int idAcudiente = Integer.parseInt(obtenerInformaciónCelda(jTablePersonas, 0).toString());
        if (this.principal.eliminarAcudiente(idAcudiente)) {
            JOptionPane.showMessageDialog(null, "Se ha eliminado el acudiente correctamente", "Personas", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        return false;
    }

    private boolean eliminarDocente() {
        int numContrato = Integer.parseInt(obtenerInformaciónCelda(jTablePersonas, 0).toString());
        if (this.principal.eliminarDocente(numContrato)) {
            JOptionPane.showMessageDialog(null, "Se ha eliminado el docente correctamente", "Personas", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        return false;
    }

    private boolean eliminarDirectivo() {
        int numContrato = Integer.parseInt(obtenerInformaciónCelda(jTablePersonas, 0).toString());
        if (this.principal.eliminarDirectivo(numContrato)) {
            JOptionPane.showMessageDialog(null, "Se ha eliminado el directivo correctamente", "Personas", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        return false;
    }

    private boolean eliminarPersonal() {
        int numContrato = Integer.parseInt(obtenerInformaciónCelda(jTablePersonas, 0).toString());
        if (this.principal.eliminarPersonal(numContrato)) {
            JOptionPane.showMessageDialog(null, "Se ha eliminado el personal de servicio correctamente", "Personas", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        return false;
    }

    private boolean obtenerTrabajadorPorContrato(int numero_contrato) {
        return this.principal.existeTrabajadorPorContrato(numero_contrato);
    }

    private boolean existeEstudiantePorCodigo(int codigo) {
        return this.principal.existeEstudiantePorCodigo(codigo);
    }

    private void modificarTabla() {
        modificarGridTabla(jTablePersonas);
        modificarAlturaFilas(jTablePersonas);
        renderizarTabla(jTablePersonas);
    }

    private void modificarAnchoColumnasEstudiantes() {
        TableColumnModel columnModel = jTablePersonas.getColumnModel();
        this.jTablePersonas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        columnModel.getColumn(0).setMinWidth(100);
        columnModel.getColumn(1).setMinWidth(160);
        columnModel.getColumn(2).setMinWidth(120);
        columnModel.getColumn(3).setMinWidth(170);
        columnModel.getColumn(4).setMinWidth(170);
        columnModel.getColumn(5).setMinWidth(90);
        columnModel.getColumn(6).setMinWidth(70);
        columnModel.getColumn(7).setMinWidth(90);
        columnModel.getColumn(8).setMinWidth(100);
        columnModel.getColumn(9).setMinWidth(170);
        columnModel.getColumn(10).setMinWidth(90);
    }

    private void modificarAnchoColumnasAcudientes() {
        TableColumnModel columnModel = jTablePersonas.getColumnModel();
        this.jTablePersonas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        columnModel.getColumn(0).setMinWidth(100);
        columnModel.getColumn(1).setMinWidth(160);
        columnModel.getColumn(2).setMinWidth(120);
        columnModel.getColumn(3).setMinWidth(170);
        columnModel.getColumn(4).setMinWidth(170);
        columnModel.getColumn(5).setMinWidth(90);
        columnModel.getColumn(6).setMinWidth(70);
        columnModel.getColumn(7).setMinWidth(90);
        columnModel.getColumn(8).setMinWidth(100);
    }

    private void modificarAnchoColumnasTrabajadores() {
        TableColumnModel columnModel = jTablePersonas.getColumnModel();
        this.jTablePersonas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        columnModel.getColumn(0).setMinWidth(100);
        columnModel.getColumn(1).setMinWidth(175);
        columnModel.getColumn(2).setMinWidth(120);
        columnModel.getColumn(3).setMinWidth(170);
        columnModel.getColumn(4).setMinWidth(170);
        columnModel.getColumn(5).setMinWidth(90);
        columnModel.getColumn(6).setMinWidth(110);
        columnModel.getColumn(7).setMinWidth(107);
    }

    @Override
    public boolean buscar() {
        long documento = Long.parseLong(this.jTextFieldDocumento.getText());
        return this.principal.existePersona(documento);
    }

    private void cargarEPS() {
        String[] datos = this.principal.obtenerEPS();
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        
        modelo.addElement("EPS");
        
        for(int i = 0 ; i < datos.length; i++){
            modelo.addElement(datos[i]);
        }
        
        this.jComboBoxEstEPS.setModel(modelo);
    }

    private void modificarAnchoColumnasPersonas() {
        TableColumnModel columnModel = jTablePersonas.getColumnModel();
        this.jTablePersonas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        columnModel.getColumn(0).setMinWidth(130);
        columnModel.getColumn(1).setMinWidth(180);
        columnModel.getColumn(2).setMinWidth(200);
        columnModel.getColumn(3).setMinWidth(200);
        columnModel.getColumn(4).setMinWidth(80);
        columnModel.getColumn(5).setMinWidth(80);
        columnModel.getColumn(6).setMinWidth(140);
        columnModel.getColumn(7).setMinWidth(120);
    }

    private void cargarPersonasTabla() {
        this.jTablePersonas.setModel((TableModel) cargarDatosPrincipales());
        this.modificarAnchoColumnasPersonas();
    }

    @Override
    public void agregarItemsAMenu() {
        jMenuitemEliminar = new JMenuItem("Eliminar Persona");
        this.jMenuitemEliminar.addActionListener((ActionEvent e) -> {
            eliminarPersona();
            
        });
        
        this.jPopupMenuLista.add(jMenuitemEliminar);
    }
    @Override
    public void limpiar(){
        ingresarPosicionComboBox(0, jPanelRegistro);
        agregarTextosDefecto();
    }
}
